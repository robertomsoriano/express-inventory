{"version":3,"sources":["actions/types.js","actions/errorActions.js","actions/authActions.js","actions/cartItemsActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/MyNavbar.js","components/items/AddItem.js","actions/itemsActions.js","actions/vehicleActions.js","components/vehicles/AddVehicleModal.js","components/vehicles/VehicleList.js","components/items/ItemsList.js","components/items/EditItem.js","components/vehicles/EditVehicle.js","hooks/currentCartAmount.js","hooks/useForm.js","actions/checkoutActions.js","components/cartItems/CheckoutTransac.js","components/cartItems/CartItems.js","components/cartItems/Cart.js","components/invoice/Invoice.js","components/invoice/ShowInvoice.js","actions/transActions.js","components/dashboard/TransModal.js","components/dashboard/Trans.js","components/dashboard/TransSearch.js","App.js","reducers/itemsReducer.js","reducers/vehicleReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/cartItemsReducer.js","reducers/transReducer.js","reducers/checkoutReducer.js","reducers/index.js","store.js","index.js"],"names":["TOKEN","returnErrors","msg","status","id","type","payload","clearErrors","tokenConfig","getState","token","auth","config","headers","deleteCartVehicle","dispatch","setCartLoading","axios","delete","then","res","data","catch","err","response","increaseQuantity","item","put","RegisterModal","Component","state","modal","name","email","password","toggle","this","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","componentDidUpdate","prevProps","error","isAuthenticated","render","NavLink","onClick","href","className","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Field","control","Input","icon","label","placeholder","required","iconPosition","Button","style","marginTop","block","connect","body","JSON","stringify","post","LoginModal","user","login","Logout","logout","withRouter","useSelector","cart","cartItems","useEffect","useState","setIsOpen","authLinks","NavItem","history","push","length","quant","map","item_quantity","reduce","acc","curr","cartQuantity","item_total","result","Math","round","cartTotal","guestLinks","marginLeft","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","useDispatch","setModal","item_type","item_name","item_number","item_desc","item_price","item_image","newType","setNewType","newName","setNewName","newNumber","setNewNumber","newDescription","setNewDescription","newPrice","setNewPrice","newQuantity","setNewQuantity","newPic","setNewPic","addItem","items","errors","fallback","marginBottom","padding","margin","ListGroupItem","ButtonGroup","size","backgroundColor","src","alt","width","height","getVehicles","get","vehicle_type","vehicle_name","vehicle_number","vehicle_make","vehicle_model","vehicle_year","vehicle_mileage","vehicle_state","vehicle_desc","vehicle_image","vehicle","newMake","setNewMake","newModel","setNewModel","newYear","setNewYear","newMileage","setNewMileage","newState","setNewState","vehicles","vehicleInCart","addVehicleToCart","vehicleToAdd","checkVehicleID","vehID","_id","ListGroup","TransitionGroup","CSSTransition","timeout","classNames","Table","hover","responsive","borderless","overflowX","key","scope","to","outline","pathname","ItemsList","bgcolor","Swal","fire","title","text","footer","itemRequested","itemInCart","filter","inQuestion","confirmButtonColor","checkStock","itemID","match","params","setItem","newID","setNewID","a","fetchData","handleUpdate","itemId","showCancelButton","cancelButtonColor","confirmButtonText","updateItem","handleDelete","readOnly","vehicleID","setVehicle","vehicleId","currentCartTotal","useForm","initialValues","values","setValues","postTransaction","console","log","setCheckoutLoading","useHistory","applySale","setApplySale","discount","setDiscount","calcTaxes","subtotal","taxRate","phone","operator","amountReceived","message","percentage","handleChange","applyDiscount","grandTotal","transaction","transac_type","transac_operator","transac_customer","transac_vehicle","transac_items","sale_transac","transac_subtotal","transac_discount","transac_taxes","transac_total","amount_received","transac_message","window","location","replace","sendTrans","justifyContent","alignContent","alignItems","Col","xs","toFixed","border","borderRadius","Label","for","Segment","compact","Checkbox","checked","total","percent","float","fontSize","decreaseQuantity","deleteItem","Cart","checkout","Invoice","invoice_number","transac_status","transac_date","totalVariable","car","setCar","print","minHeight","marginRight","clear","toUpperCase","Date","slice","colSpan","trans","setTransLoading","TransModal","trigger","raised","basic","customer","centered","Header","header","Content","left","children","showInvoice","setShowInvoice","setTransac","setDisplayInvoice","setInvoice","Spinner","animation","variant","magin","Row","idx","moment","format","sm","Card","cardStyle","Item","action","Grid","columns","relaxed","stackable","Column","DropdownMenu","Body","as","display","minWidth","maxWidth","boxRadius","boxShadow","initialState","isLoading","results","TransSearch","handleResultSelect","handleSearchChange","setTimeout","re","RegExp","_","escapeRegExp","test","x","Search","input","Icon","link","loading","onResultSelect","onSearchChange","debounce","leading","resultRenderer","transac","App","path","exact","localStorage","getItem","posted","invoice","combineReducers","veh","removeItem","position","showConfirmButton","timer","middleWare","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7d78a72f.chunk.js","sourcesContent":["// AUTH\nexport const TOKEN = \"EXPRESS-INVENTORY_TOKEN\";\n// Items\nexport const GET_ITEMS = \"GET_ITEMS\";\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const EDIT_ITEM = \"EDIT_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\n// Vehicles\nexport const GET_VEHICLES = \"GET_VEHICLES\";\nexport const ADD_VEHICLE = \"ADD_VEHICLE\";\nexport const EDIT_VEHICLE = \"EDIT_VEHICLE\";\nexport const DELETE_VEHICLE = \"DELETE_VEHICLE\";\nexport const VEHICLES_LOADING = \"VEHICLES_LOADING\";\n// Users\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\n// Books\nexport const GET_BOOKS = \"GET_BOOKS\";\nexport const PUT_BOOK = \"PUT_BOOK\";\nexport const ADD_BOOK = \"ADD_BOOK\";\nexport const DELETE_BOOK = \"DELETE_BOOK\";\nexport const BOOKS_LOADING = \"BOOKS_LOADING\";\nexport const BOOKS_FAILURE = \"BOOKS_FAILURE\";\n// Cart\nexport const SET_CART = \"SET_CART\";\nexport const SET_CART_VEHICLE = \"SET_CART_VEHICLE\";\nexport const SET_CART_AMOUNT = \"SET_CART_AMOUNT\";\nexport const UPDATE_CART_ITEM = \"UPDATE_CART_ITEM\";\nexport const DELETE_CART_ITEM = \"DELETE_CART_ITEM\";\nexport const DELETE_CART_VEHICLE = \"DELETE_CART_VEHICLE\";\nexport const EMPTY_CART = \"EMPTY_CART\";\nexport const CART_LOADING = \"CART_LOADING\";\n//Checkout \nexport const POST_TRANSACTION = \"POST_TRANSACTION\";\nexport const SET_CHECKOUT_LOADING = \"SET_CHECKOUT_LOADING\";\nexport const GET_CUSTOMER_DATA = \"GET_CUSTOMER_DATA\"\nexport const SET_INVOICE = \"SET_INVOICE\";\nexport const CLEAR_INVOICE = \"CLEAR_INVOICE\";\n\n//Transactions\nexport const GET_TRANS = \"GET_TRANS\";\nexport const SET_TRANS_LOADING = 'SET_TRANS_LOADING'\n// Errors\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n","import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, id }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","import axios from 'axios';\nimport { returnErrors } from './errorActions';\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from './types';\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get('/api/auth/user', tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n};\n\n// Register User\nexport const register = ({ name, email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post('/api/users', body, config)\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL')\n      );\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    });\n};\n\n// Login User\nexport const login = ({ email, password }) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post('/api/auth', body, config)\n    .then(res =>\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\n      );\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n};\n\n// Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};\n","import axios from \"axios\";\nimport {\n  SET_CART, SET_CART_VEHICLE,\n  EMPTY_CART,\n  CART_LOADING,\n  UPDATE_CART_ITEM,\n  DELETE_CART_ITEM,\n  DELETE_CART_VEHICLE\n} from \"../actions/types\";\nimport { tokenConfig } from \"./authActions\";\nimport {\n  returnErrors, clearErrors\n  // ,clearErrors\n} from \"./errorActions\";\n\n// Cart Vehicle\nexport const setCartVehicle = () => (dispatch, getState) => {\n  dispatch(setCartLoading());\n  axios\n    .get(\"/api/cart-items/vehicle\", tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: SET_CART_VEHICLE,\n        payload: res.data\n      });\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const postVehicleForCart = (vehicle) => (dispatch, getState) => {\n  dispatch(setCartLoading());\n  axios\n    .post(`/api/cart-items/vehicle`, vehicle, tokenConfig(getState))\n    .then(res => {\n      dispatch({\n        type: SET_CART_VEHICLE,\n        payload: res.data\n      });\n    }\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\nexport const deleteCartVehicle = () => (dispatch, getState) => {\n  dispatch(setCartLoading());\n  axios\n    .delete(`/api/cart-items/vehicle`, tokenConfig(getState))\n    .then(res => {\n      dispatch({\n        type: DELETE_CART_VEHICLE,\n        payload: res.data\n      });\n    }\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\n// End cart Vehicle\n\nexport const setCart = () => (dispatch, getState) => {\n  dispatch(setCartLoading());\n  axios\n    .get(\"/api/cart-items\", tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: SET_CART,\n        payload: res.data\n      });\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const increaseQuantity = (item) => (dispatch, getState) => {\n  dispatch(setCartLoading());\n  axios\n    .put(`/api/cart-items/add`, { item }, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: UPDATE_CART_ITEM,\n        payload: res.data\n      });\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const decreaseQuantity = (item) => (dispatch, getState) => {\n  dispatch(setCartLoading());\n  axios\n    .put(\n      `/api/cart-items/decrease`,\n      { item: item },\n      tokenConfig(getState)\n    )\n    .then((res) => {\n      dispatch({\n        type: UPDATE_CART_ITEM,\n        payload: res.data\n      });\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteItem = (item) => (dispatch, getState) => {\n  dispatch(setCartLoading());\n  axios\n    .delete(`/api/cart-items/delete-item/${item._id}`, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: DELETE_CART_ITEM,\n        payload: res.data\n      });\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\n\nexport const emptyCart = () => (dispatch, getState) => {\n  dispatch(setCartLoading());\n  axios\n    .post(\n      `/api/cart-item/empty`,\n      { action: \"empty cart\" },\n      tokenConfig(getState)\n    )\n    .then((res) => {\n      dispatch({\n        type: EMPTY_CART,\n        payload: res.data\n      });\n    })\n    .catch((err) =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const setCartLoading = () => (dispatch) => {\n  return dispatch({\n    type: CART_LOADING\n  });\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  // Form,\n  FormGroup,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { \n  Input,\n  Form\n} from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass RegisterModal extends Component {\n  state = {\n    modal: false,\n    name: '',\n    email: '',\n    password: '',\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    // Create user object\n    const newUser = {\n      name,\n      email,\n      password\n    };\n\n    // Attempt to register\n    this.props.register(newUser);\n  };\n\n  render() {\n    return (\n      <>\n        <NavLink onClick={this.toggle} href='#' className='login-modal'>\n          Register\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color='danger'>{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Form.Field\n                  control={Input}\n                  icon='address card'\n                  type='text'\n                  name='name'\n                  id='name'\n                  label='Full name'\n                  placeholder='Full name'\n                  onChange={this.onChange}\n                  required\n                />\n\n                <Form.Field\n                  control={Input}\n                  icon='user'\n                  iconPosition='left'\n                  label='Email/Username'\n                  placeholder='Email/Username'\n                  type='email'\n                  name='email'\n                  id='email'\n                  onChange={this.onChange}\n                  required\n                />\n                <Form.Field\n                  control={Input}\n                  icon='lock'\n                  iconPosition='left'\n                  label='Password'\n                  type='password'\n                  name='password'\n                  id='password'\n                  placeholder='Password'\n                  onChange={this.onChange}\n                  required\n                />\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\n                  Register\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { register, clearErrors }\n)(RegisterModal);\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { \n  Input,\n  Form\n} from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass LoginModal extends Component {\n  state = {\n    modal: false,\n    email: '',\n    password: '',\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated, close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.props.clearErrors();\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n\n    const user = {\n      email,\n      password\n    };\n\n    // Attempt to login\n    this.props.login(user);\n  };\n\n  render() {\n    return (\n      <>\n        <NavLink onClick={this.toggle} href='#' className='login-modal'>\n          Log in\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Log in</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color='danger'>{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Form.Field\n                  control={Input}\n                  icon='user'\n                  iconPosition='left'\n                  label='Username'\n                  placeholder='Username'\n                  type='email'\n                  name='email'\n                  id='email'\n                  onChange={this.onChange}\n                  required\n                />\n                <Form.Field\n                  control={Input}\n                  icon='lock'\n                  iconPosition='left'\n                  label='Password'\n                  type='password'\n                  name='password'\n                  id='password'\n                  placeholder='Password'\n                  onChange={this.onChange}\n                  required\n                />\n                <Button color='dark' style={{ marginTop: '2rem' }} block>\n                  Login\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { login, clearErrors }\n)(LoginModal);\n","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nexport class Logout extends Component {\n  static propTypes = {\n    logout: PropTypes.func.isRequired\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <NavLink onClick={this.props.logout} href='#'>\n          Logout\n        </NavLink>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { logout }\n)(Logout);\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n  // UncontrolledDropdown,\n  // DropdownToggle,\n  // DropdownMenu,\n  // DropdownItem\n} from \"reactstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport RegisterModal from \"./auth/RegisterModal\";\nimport LoginModal from \"./auth/LoginModal\";\nimport Logout from \"./auth/Logout\";\n\nexport const MyNavbar = (props) => {\n  // const dispatch = useDispatch()\n  const state = useSelector((state) => state);\n  const user = state.auth.user;\n  const auth = state.auth;\n  const cart = state.cartItems;\n  useEffect(() => { }, []);\n  const [isOpen, setIsOpen] = useState(false);\n  const cartTotal = () => {\n    if (cart.cart.length) {\n      let quant = cart.cart.map((item) => item.item_total);\n      quant = quant.reduce((acc, curr) => acc + curr);\n      let result = Math.round(quant * 100) / 100;\n      return <i style={{ color: \"coral\" }}> Subtotal: ${result}</i>;\n    }\n    return;\n  };\n  const cartQuantity = () => {\n    if (cart.cart.length) {\n      let quant = cart.cart.map((item) => item.item_quantity);\n      quant = quant.reduce((acc, curr) => acc + curr);\n      return quant;\n    }\n    return;\n  };\n  const authLinks = (\n    <Fragment>\n      <NavItem >\n        <span className=\"navbar-text mr-3\" onClick={() => props.history.push(\"/\")}>\n          <strong>{user ? `Welcome ${user.name}` : \"\"}</strong>\n        </span>\n      </NavItem>\n      <NavItem>\n        <NavLink onClick={() => props.history.push(\"/dashboard\")}>\n          Transactions\n        </NavLink>\n      </NavItem>\n      {/* <NavItem>\n        <NavLink onClick={() => props.history.push(\"/parts\")}>Parts</NavLink>\n      </NavItem> */}\n      <NavLink onClick={() => props.history.push(\"/cart\")}>\n        <i className=\"fa fa-shopping-cart\">\n          Cart{cart.cart.length > 0 && `(${cartQuantity()}):`}{\" \"}\n          {cartTotal()}\n        </i>\n      </NavLink>\n      {/* <UncontrolledDropdown nav inNavbar>\n        <DropdownToggle nav caret>\n          <i className=\"fa fa-shopping-cart\">Cart {cartQuantity()}</i>\n        </DropdownToggle>\n        <DropdownMenu right>\n          <DropdownItem className=\"dropdown-item\">\n            <NavLink onClick={() => props.history.push(\"/cart\")}>\n              <i className=\"fa fa-shopping-cart\">\n                Cart{cart.cart.length > 0 && `(${cartQuantity()}):`}{\" \"}\n                {cartTotal()}\n              </i>\n            </NavLink>\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem>\n            <NavLink onClick={() => props.history.push(\"/checkout\")}>\n              Proceed to Checkout\n            </NavLink>\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown> */}\n      <NavItem>\n        <Logout />\n      </NavItem>\n    </Fragment>\n  );\n  const guestLinks = (\n    <Fragment>\n      <NavItem>\n        <RegisterModal />\n      </NavItem>\n      <NavItem style={{ marginLeft: \".5rem\" }}>\n        <LoginModal />\n      </NavItem>\n    </Fragment>\n  );\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n        <Container>\n          <NavbarBrand href=\"/\">Express Inventory</NavbarBrand>\n          <NavbarToggler onClick={() => setIsOpen(!isOpen)} />\n          <Collapse isOpen={state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              {/* {guestLinks} */}\n              {auth.isAuthenticated ? authLinks : guestLinks}\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default withRouter(MyNavbar);\n","import React, { useState, useEffect, Suspense } from \"react\";\nimport { withRouter } from \"react-router-dom\"\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addItem } from \"../../actions/itemsActions\"\nimport { clearErrors } from \"../../actions/errorActions\";\n//components\nimport {\n    Alert, ListGroupItem, Button, ButtonGroup, Input, Spinner,\n    Modal, ModalHeader, ModalBody, Form, FormGroup\n} from \"reactstrap\";\nconst AddItem = (props) => {\n    const state = useSelector(state => state)\n    const dispatch = useDispatch()\n    const [modal, setModal] = useState(false);\n    const toggle = () => {\n        setModal(modal => !modal);\n    };\n\n    const [item, setItem] = useState({\n        item_type: \"part\",\n        item_name: \"\",\n        item_number: \"\",\n        item_desc: \"\",\n        item_price: \"99.99\",\n        item_quantity: \"1\",\n        item_image: \"https://contentinfo.autozone.com/znetcs/product-info/es/MX/rch/RS999935/image/10/\",\n    });\n    const [newType, setNewType] = useState(item.item_type);\n    const [newName, setNewName] = useState(item.item_name);\n    const [newNumber, setNewNumber] = useState(item.item_number);\n    const [newDescription, setNewDescription] = useState(item.item_desc);\n    const [newPrice, setNewPrice] = useState(item.item_price);\n    const [newQuantity, setNewQuantity] = useState(item.item_quantity);\n    const [newPic, setNewPic] = useState(item.item_image);\n    const onSubmit = e => {\n        clearErrors();\n        e.preventDefault();\n        dispatch(addItem({\n            item_type: newType,\n            item_name: newName,\n            item_number: newNumber,\n            item_desc: newDescription,\n            item_price: newPrice,\n            item_quantity: newQuantity,\n            item_image: newPic\n        }));\n    };\n    useEffect(() => {\n        setNewType(\"part\")\n        setNewName(\"\");\n        setNewNumber(\"\")\n        setNewDescription(\"\");\n        setNewPrice(\"99\");\n        setNewQuantity(\"1\");\n        setNewPic(\"https://contentinfo.autozone.com/znetcs/product-info/es/MX/rch/RS999935/image/10/\");\n        setModal(false);\n    }, [state.items.items.length]);\n\n\n    useEffect(() => {\n        clearErrors()\n        // eslint-disable-next-line\n    }, [state.errors]);\n\n    return (\n        <Suspense fallback={<Spinner color=\"dark\" />}>\n            <>\n                <Button\n                    className=\"btn-block\"\n                    color=\"dark\"\n                    style={{ marginBottom: \"2rem\", padding: \".6rem\" }}\n                    onClick={() => toggle()}>\n                    Add New Item\n                </Button>\n                <Modal isOpen={modal} toggle={() => toggle()}>\n                    <ModalHeader toggle={() => toggle()}>Add New Item</ModalHeader>\n                    <ModalBody>\n                        {state.error.msg !== null && (\n                            <Alert color=\"danger\">{state.error.msg.msg}</Alert>\n                        )}\n                        <div className=\"container\" style={{ margin: \".2rem\" }}>\n                            <div className=\"form-group edit-container-form\">\n                                <Form onSubmit={(e) => onSubmit(e)}>\n                                    <FormGroup>\n                                        <h2 className=\"edit-header\">{newName}</h2>\n                                        <ListGroupItem>\n                                            <h5>Type of Item</h5>\n                                            <ButtonGroup size=\"sm\">\n                                                <Button onClick={() => setNewType('part')} style={newType === 'part' ? { backgroundColor: 'coral' } : {}}>Part</Button>\n                                                <Button onClick={() => setNewType('service')} style={newType === 'service' ? { backgroundColor: 'coral' } : {}}>Service</Button>\n                                            </ButtonGroup>\n                                            <h5>Name</h5>\n                                            <Input\n                                                required\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Item name\"\n                                                value={`${newName}`}\n                                                onChange={e => setNewName(e.target.value)}\n                                            />\n                                            <h5>Item Number</h5>\n                                            <Input\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Item number\"\n                                                value={`${newNumber}`}\n                                                onChange={e => setNewNumber(e.target.value)}\n                                            />\n                                            <h5>Description</h5>\n                                            <Input\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Item description\"\n                                                value={`${newDescription}`}\n                                                onChange={e => setNewDescription(e.target.value)}\n                                            />\n                                            <h5>Price</h5>\n                                            <Input\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Item price\"\n                                                type=\"text\"\n                                                value={`${newPrice}`}\n                                                onChange={e => setNewPrice(e.target.value)}\n                                            />\n\n                                            <h5>Quantity</h5>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"quantity\"\n                                                id=\"quantity\"\n                                                value={newQuantity}\n                                                placeholder=\"Add quantity\"\n                                                onChange={e => setNewQuantity(e.target.value)}\n                                                required\n                                            />\n                                            <h5>Image</h5>\n                                            <Input\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Item image\"\n                                                value={`${newPic}`}\n                                                onChange={e => setNewPic(e.target.value)}\n                                            />\n                                            <br />\n\n                                        </ListGroupItem>\n                                        <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block >\n                                            Add Item\n                                         </Button>\n                                    </FormGroup>\n                                </Form>\n                            </div>\n\n                            <div className=\"edit-container-img\">\n                                <img src={`${newPic}`} alt={newName} width=\"300px\" height=\"300px\" />\n                            </div>\n                        </div>\n\n                    </ModalBody>\n                </Modal>\n            </>\n        </Suspense>\n    )\n}\nexport default withRouter(AddItem)","import axios from 'axios';\nimport { GET_ITEMS, ADD_ITEM, EDIT_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\nimport { tokenConfig } from './authActions';\nimport { returnErrors, clearErrors } from './errorActions';\n\nexport const setItemsLoading = () => dispatch => {\n    dispatch({\n        type: ITEMS_LOADING\n    })\n    return\n};\n\n\nexport const getItems = () => (dispatch, getState) => {\n    dispatch(setItemsLoading());\n    axios\n        .get('/api/items', tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_ITEMS,\n                payload: res.data\n            })\n        }\n        )\n        .catch(err =>\n            dispatch(returnErrors(err.response.data, err.response.status))\n        );\n};\n\nexport const addItem = item => (dispatch, getState) => {\n    dispatch(setItemsLoading());\n    axios\n        .post('/api/items', item, tokenConfig(getState))\n        .then(res =>\n            dispatch({\n                type: ADD_ITEM,\n                payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch(returnErrors(err.response.data, err.response.status))\n        );\n};\nexport const updateItem = item => (dispatch, getState) => {\n    dispatch(setItemsLoading());\n    axios\n        .put(`/api/items/edit/${item.id}`, item, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: EDIT_ITEM,\n                payload: res.data\n            }); dispatch(clearErrors())\n        }\n        )\n\n        .catch(err =>\n            dispatch(returnErrors(err.response.data, err.response.status))\n        );\n};\nexport const deleteItem = id => (dispatch, getState) => {\n    axios\n        .delete(`/api/items/delete/${id}`, tokenConfig(getState))\n        .then(res =>\n            dispatch({\n                type: DELETE_ITEM,\n                payload: id\n            })\n        )\n        .catch(err =>\n            dispatch(returnErrors(err.response.data, err.response.status))\n        );\n};\n\n","import axios from \"axios\";\nimport {\n    GET_VEHICLES,\n    ADD_VEHICLE, EDIT_VEHICLE, DELETE_VEHICLE, VEHICLES_LOADING\n} from \"../actions/types\";\nimport { tokenConfig } from \"./authActions\";\nimport {\n    returnErrors\n    , clearErrors\n} from \"./errorActions\";\n// import Swal from 'sweetalert2'\n\nexport const setItemsLoading = () => dispatch => {\n    dispatch({\n        type: VEHICLES_LOADING\n    })\n    return\n};\n\nexport const getVehicles = () => (dispatch, getState) => {\n    dispatch(setItemsLoading());\n    axios\n        .get('/api/vehicles', tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: GET_VEHICLES,\n                payload: res.data\n            })\n        }\n        )\n        .catch(err =>\n            dispatch(returnErrors(err.response.data, err.response.status))\n        );\n};\n\nexport const addVehicle = item => (dispatch, getState) => {\n    dispatch(setItemsLoading());\n    axios\n        .post('/api/vehicles', item, tokenConfig(getState))\n        .then(res =>\n            dispatch({\n                type: ADD_VEHICLE,\n                payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch(returnErrors(err.response.data, err.response.status))\n        );\n};\n\nexport const updateVehicle = item => (dispatch, getState) => {\n    dispatch(setItemsLoading());\n    axios\n        .put(`/api/vehicles/update/${item.id}`, item, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: EDIT_VEHICLE,\n                payload: res.data\n            }); dispatch(clearErrors())\n        }\n        )\n\n        .catch(err =>\n            dispatch(returnErrors(err.response.data, err.response.status))\n        );\n};\n\nexport const deleteVehicle = id => (dispatch, getState) => {\n    axios\n        .delete(`/api/vehicles/delete/${id}`, tokenConfig(getState))\n        .then(res =>\n            dispatch({\n                type: DELETE_VEHICLE,\n                payload: id\n            })\n        )\n        .catch(err =>\n            dispatch(returnErrors(err.response.data, err.response.status))\n        );\n};","import React, { useState, useEffect, Suspense } from \"react\";\nimport { withRouter } from \"react-router-dom\"\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addVehicle } from \"../../actions/vehicleActions\"\nimport { clearErrors } from \"../../actions/errorActions\";\n//components\nimport {\n    Alert, ListGroupItem, Button, ButtonGroup, Input, Spinner,\n    Modal, ModalHeader, ModalBody, Form, FormGroup\n} from \"reactstrap\";\nconst AddVehicleModal = (props) => {\n    const state = useSelector(state => state)\n    const dispatch = useDispatch()\n    const [modal, setModal] = useState(false);\n    const toggle = () => {\n        setModal(modal => !modal);\n    };\n\n    const [vehicle, setvehicle] = useState({\n        vehicle_type: \"van\",\n        vehicle_name: \"\",\n        vehicle_number: \"\",\n        vehicle_make: \"\",\n        vehicle_model: \"\",\n        vehicle_year: \"\",\n        vehicle_mileage: \"\",\n        vehicle_state: \"\",\n        vehicle_desc: \"\",\n        vehicle_image: \"https://shop.ford.com/content/dam/shop_ford/en_us/common/resources/common/nameplate/2020/explorer/assetChoosePathLeft.png\",\n    });\n    const [newType, setNewType] = useState(vehicle.vehicle_type);\n    const [newName, setNewName] = useState(vehicle.vehicle_name);\n    const [newNumber, setNewNumber] = useState(vehicle.vehicle_number);\n    const [newMake, setNewMake] = useState(vehicle.vehicle_make);\n    const [newModel, setNewModel] = useState(vehicle.vehicle_model);\n    const [newYear, setNewYear] = useState(vehicle.vehicle_year);\n    const [newMileage, setNewMileage] = useState(vehicle.vehicle_mileage);\n    const [newState, setNewState] = useState(vehicle.vehicle_state);\n    const [newDescription, setNewDescription] = useState(vehicle.vehicle_desc);\n    const [newPic, setNewPic] = useState(vehicle.vehicle_image);\n    const onSubmit = e => {\n        clearErrors();\n        e.preventDefault();\n        dispatch(addVehicle({\n            vehicle_type: newType,\n            vehicle_name: newName,\n            vehicle_number: newNumber,\n            vehicle_make: newMake,\n            vehicle_model: newModel,\n            vehicle_year: newYear,\n            vehicle_mileage: newMileage,\n            vehicle_state: newState,\n            vehicle_desc: newDescription,\n            vehicle_image: newPic\n        }));\n    };\n    useEffect(() => {\n        setNewType(\"van\")\n        setNewName(\"\");\n        setNewNumber(\"\")\n        setNewMake(\"\")\n        setNewModel(\"\");\n        setNewYear(\"\")\n        setNewMileage(\"\");\n        setNewState(\"MA\")\n        setNewDescription(\"\");\n        setNewPic(\"https://shop.ford.com/content/dam/shop_ford/en_us/common/resources/common/nameplate/2020/explorer/assetChoosePathLeft.png\");\n        setModal(false);\n    }, [state.vehicles.vehicles.length]);\n\n\n    useEffect(() => {\n        clearErrors()\n        // eslint-disable-next-line\n    }, [state.errors]);\n\n    return (\n        <Suspense fallback={<Spinner color=\"dark\" />}>\n            <>\n                <Button\n                    className=\"btn-block\"\n                    color=\"dark\"\n                    style={{ marginBottom: \"2rem\", padding: \".6rem\" }}\n                    onClick={() => toggle()}>\n                    Add New Vehicle\n                </Button>\n                <Modal isOpen={modal} toggle={() => toggle()}>\n                    <ModalHeader toggle={() => toggle()}>Add New Vehicle</ModalHeader>\n                    <ModalBody>\n                        {state.error.msg !== null && (\n                            <Alert color=\"danger\">{state.error.msg.msg}</Alert>\n                        )}\n                        <div className=\"container\" style={{ margin: \".2rem\" }}>\n                            <div className=\"form-group edit-container-form\">\n                                <Form onSubmit={(e) => onSubmit(e)}>\n                                    <FormGroup>\n                                        <h2 className=\"edit-header\">{newName}</h2>\n                                        <ListGroupItem>\n                                            <h5>Type of Vehicle</h5>\n                                            <ButtonGroup size=\"sm\">\n                                                <Button onClick={() => setNewType('van')} style={newType === 'van' ? { backgroundColor: 'coral' } : {}}>Van</Button>\n                                                <Button onClick={() => setNewType('car')} style={newType === 'car' ? { backgroundColor: 'coral' } : {}}>Car</Button>\n                                                <Button onClick={() => setNewType('bus')} style={newType === 'bus' ? { backgroundColor: 'coral' } : {}}>Bus</Button>\n                                            </ButtonGroup>\n                                            <h5>Vehicle Name</h5>\n                                            <Input\n                                                required\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Vehicle name\"\n                                                value={`${newName}`}\n                                                onChange={e => setNewName(e.target.value)}\n                                            />\n                                            <h5>Vehicle Plate</h5>\n                                            <Input\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Vehicle Plate\"\n                                                value={`${newNumber}`}\n                                                onChange={e => setNewNumber(e.target.value)}\n                                            />\n                                            <h5>Vehicle Make</h5>\n                                            <Input\n                                                required\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Vehicle Make\"\n                                                value={`${newMake}`}\n                                                onChange={e => setNewMake(e.target.value)}\n                                            />\n                                            <h5>Vehicle Model</h5>\n                                            <Input\n                                                required\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Vehicle Model\"\n                                                value={`${newModel}`}\n                                                onChange={e => setNewModel(e.target.value)}\n                                            />\n                                            <h5>Vehicle Year</h5>\n                                            <Input\n                                                required\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Vehicle Year\"\n                                                value={`${newYear}`}\n                                                onChange={e => setNewYear(e.target.value)}\n                                            />\n                                            <h5>Vehicle Mileage</h5>\n                                            <Input\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Vehicle Mileage\"\n                                                value={`${newMileage}`}\n                                                onChange={e => setNewMileage(e.target.value)}\n                                            />\n                                            <h5>Vehicle State</h5>\n                                            <Input\n                                                required\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Vehicle State\"\n                                                value={`${newState}`}\n                                                onChange={e => setNewState(e.target.value)}\n                                            />\n                                            <h5>Description</h5>\n                                            <Input\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Vehicle description\"\n                                                value={`${newDescription}`}\n                                                onChange={e => setNewDescription(e.target.value)}\n                                            />\n                                            <h5>Image</h5>\n                                            <Input\n                                                className=\" form-control col-xs-2\"\n                                                placeholder=\"Enter Vehicle image\"\n                                                value={`${newPic}`}\n                                                onChange={e => setNewPic(e.target.value)}\n                                            />\n                                            <br />\n\n                                        </ListGroupItem>\n                                        <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block >\n                                            Add Vehicle\n                                         </Button>\n                                    </FormGroup>\n                                </Form>\n                            </div>\n\n                            <div className=\"edit-container-img\">\n                                <img src={`${newPic}`} alt={newName} width=\"300px\" height=\"300px\" />\n                            </div>\n                        </div>\n\n                    </ModalBody>\n                </Modal>\n            </>\n        </Suspense>\n    )\n}\nexport default withRouter(AddVehicleModal)","import React, { useEffect, Suspense } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n//Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getVehicles, increaseQuantity } from \"../../actions/vehicleActions\";\nimport AddVehicleModal from \"./AddVehicleModal\";\n// Components\nimport {\n    Container,\n    ListGroup,\n    ListGroupItem,\n    Button,\n    Table,\n    Spinner\n} from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Swal from \"sweetalert2\";\nimport { postVehicleForCart, deleteCartVehicle } from \"../../actions/cartItemsActions\";\n\n\nconst VehicleList = (props) => {\n    const state = useSelector(state => state)\n    const vehicles = state.vehicles\n    const cartItems = state.cartItems\n    const vehicleInCart = cartItems.vehicle ? cartItems.vehicle : null\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getVehicles())\n    }, [])\n    useEffect(() => {\n    }, [vehicles, vehicleInCart])\n    const addVehicleToCart = (vehicleToAdd) => {\n        dispatch(postVehicleForCart(vehicleToAdd))\n    }\n    const checkVehicleID = (vehID) => {\n        if (vehicleInCart) {\n            if (vehicleInCart._id === vehID) { return true }\n        }\n    }\n\n    if (vehicleInCart) {\n        return (\n            <>\n                <Suspense fallback={<Spinner color=\"dark\" />}>\n                    {\n\n                        <Container style={{ marginTop: \"5rem\" }}>\n\n                            <h2>{`Vehicle In Use For the Transaction`}</h2>\n                            <ListGroup>\n                                <TransitionGroup className=\"shopping-list\">\n                                    <CSSTransition timeout={0} classNames=\"fade\">\n                                        <ListGroupItem>\n                                            <Table\n                                                hover\n                                                responsive\n                                                borderless\n                                                style={{ overflowX: \"auto\" }}\n                                            >\n                                                <thead>\n                                                    <tr>\n                                                        <th></th>\n                                                        <th>Vehicle Plate</th>\n\n                                                    </tr>\n                                                </thead>\n                                                <tbody\n                                                    key={vehicleInCart._id}\n                                                    style={{\n                                                        backgroundColor: null\n                                                    }}\n                                                >\n                                                    <tr>\n                                                        <th scope=\"row\">\n                                                            {state.auth.isAuthenticated && (\n                                                                <>\n                                                                    <Link\n                                                                        to={`/cart`}\n                                                                    >\n                                                                        <Button className=\"edit-btn\" outline>\n                                                                            Go to Cart\n                                    </Button>\n                                                                    </Link>\n                                                                    <Button\n                                                                        className=\"edit-btn\"\n                                                                        outline\n                                                                        onClick={() => dispatch(deleteCartVehicle())}\n                                                                    >\n                                                                        Delete from Cart\n                                                                </Button>\n                                                                </>\n                                                            )}\n                                                        </th>\n                                                        <td>{vehicleInCart.vehicle_number}</td>\n                                                        <td>\n                                                            <img\n                                                                src={`${vehicleInCart.vehicle_image}`}\n                                                                alt={vehicleInCart.vehicle_name}\n                                                                width=\"100px\"\n                                                                height=\"100px\"\n                                                            />\n                                                        </td>\n                                                    </tr>\n                                                </tbody>\n                                                {/* ))} */}\n                                            </Table>\n                                        </ListGroupItem>\n                                    </CSSTransition>\n                                </TransitionGroup>\n                            </ListGroup>\n                        </Container>\n                    }\n                    {/* <AddVehicleModal /> */}\n                </Suspense>\n            </>\n        )\n    }\n    return (\n        <>\n            <Suspense fallback={<Spinner color=\"dark\" />}>\n                {\n\n                    <Container style={{ marginTop: \"5rem\" }}>\n                        {/* <Button\n                            className=\"edit-btn\"\n                            outline\n                            onClick={() => dispatch(deleteCartVehicle())}\n                        >\n                            Delete\n                        </Button> */}\n                        <h2>{`Vehicle List`}</h2>\n                        <ListGroup>\n                            <TransitionGroup className=\"shopping-list\">\n                                <CSSTransition timeout={0} classNames=\"fade\">\n                                    <ListGroupItem>\n                                        <Table\n                                            hover\n                                            responsive\n                                            borderless\n                                            style={{ overflowX: \"auto\" }}\n                                        >\n                                            <thead>\n                                                <tr>\n                                                    <th></th>\n                                                    <th>Name</th>\n                                                    <th>Plate</th>\n                                                    {/* <th>Image</th> */}\n                                                </tr>\n                                            </thead>\n\n                                            {vehicles.vehicles.length > 0 &&\n                                                vehicles.vehicles.map((vehicle) => (\n                                                    <tbody\n                                                        key={vehicle._id}\n                                                        // bgcolor={vehicle.vehicle_quantity <= 0 ? \"coral\" : \"white\"}\n                                                        style={{\n                                                            backgroundColor: null\n                                                        }}\n                                                    >\n                                                        <tr>\n                                                            <th scope=\"row\">\n                                                                {state.auth.isAuthenticated && (\n                                                                    <>\n                                                                        <Link\n                                                                            to={{\n                                                                                pathname: `/vehicle/edit/${vehicle._id}`,\n                                                                                state: { vehicle }\n                                                                            }}\n                                                                        >\n                                                                            <Button className=\"edit-btn\" outline>\n                                                                                View/Edit\n                                    </Button>\n                                                                        </Link>\n                                                                        <Button\n                                                                            className=\"edit-btn\"\n                                                                            outline\n                                                                            style={vehicleInCart && checkVehicleID(vehicle._id) && { backgroundColor: 'coral' }}\n                                                                            onClick={() => addVehicleToCart(vehicle)}\n                                                                        >\n                                                                            Use Vehicle\n                                  </Button>\n                                                                    </>\n                                                                )}\n                                                            </th>\n                                                            <td>{vehicle.vehicle_name}</td>\n                                                            <td>{vehicle.vehicle_number}</td>\n                                                            <td>\n                                                                <img\n                                                                    src={`${vehicle.vehicle_image}`}\n                                                                    alt={vehicle.vehicle_name}\n                                                                    width=\"100px\"\n                                                                    height=\"100px\"\n                                                                />\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                ))}\n                                        </Table>\n                                    </ListGroupItem>\n                                </CSSTransition>\n                            </TransitionGroup>\n                        </ListGroup>\n                    </Container>\n                }\n                <AddVehicleModal />\n            </Suspense>\n        </>\n    )\n}\n\nexport default withRouter(VehicleList)","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n//Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getItems } from \"../../actions/itemsActions\";\nimport { increaseQuantity } from \"../../actions/cartItemsActions\";\n// Components\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Table\n  // Spinner\n} from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\n// import AddItem from \"./AddItem\";\n\nimport Swal from \"sweetalert2\";\nimport AddItem from \"./AddItem\";\nimport VehicleList from \"../vehicles/VehicleList\";\nconst ItemsList = (props) => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  useEffect(() => {\n    dispatch(getItems());\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    // eslint-disable-next-line\n  }, [state]);\n  let items = state.items.items;\n  let cart = props.cart ? props.cart : state.cartItems.cart\n  const checkStock = (itemRequested) => {\n    // if cart is empty, Return\n    if (!cart.length) { return true }\n    let itemInCart = cart.filter(item => item._id === itemRequested._id)\n    if (itemInCart.length === 0) { return true }\n    let inQuestion = items.filter(item => item._id === itemRequested._id)\n    if ((itemInCart[0].item_quantity + 1) > inQuestion[0].item_quantity) {\n      Swal.fire({\n        title: 'Could not add more items',\n        text: \"There are not enough items in stock to complete your order\",\n        icon: 'error',\n        confirmButtonColor: '#3085d6',\n        footer: '<a href=\"/items\">Check inventory</a>'\n      })\n      return false\n    }\n    return true\n  }\n  return !items.length ? (\n    <>\n      <Container>\n        <h2>You have no Items!</h2>\n        <h6>Add a Items to your list.</h6>\n      </Container>\n    </>\n  ) : (\n      <>\n        <VehicleList />\n        {\n          <Container style={{ marginTop: \"5rem\" }}>\n            <h2>{`Available Parts & Services`}</h2>\n            <ListGroup>\n              <TransitionGroup className=\"shopping-list\">\n                <CSSTransition timeout={0} classNames=\"fade\">\n                  <ListGroupItem>\n                    <Table\n                      hover\n                      responsive\n                      borderless\n                      style={{ overflowX: \"auto\" }}\n                    >\n                      <thead>\n                        <tr>\n                          <th></th>\n\n                          <th>Name</th>\n                          <th>Description</th>\n                          <th>Price</th>\n                          <th>Quantity</th>\n                          {/* <th>Image</th> */}\n                        </tr>\n                      </thead>\n\n                      {items.length > 0 &&\n                        items.map((item) => (\n                          <tbody\n                            key={item._id}\n                            bgcolor={item.item_quantity <= 0 ? \"coral\" : \"white\"}\n                            style={{\n                              backgroundColor: null\n                            }}\n                          >\n                            <tr>\n                              <th scope=\"row\">\n                                {state.auth.isAuthenticated && (\n                                  <>\n                                    <Link\n                                      to={{\n                                        pathname: `/item/edit/${item._id}`,\n                                        state: { item }\n                                      }}\n                                    >\n                                      <Button className=\"edit-btn\" outline>\n                                        View/Edit\n                                    </Button>\n                                    </Link>\n                                    <Button\n                                      className=\"edit-btn\"\n                                      outline\n                                      onClick={() => {\n\n                                        if (item.item_quantity <= 0) {\n                                          Swal.fire({\n                                            title: \"item not available!\",\n                                            text: \"Order more copies.\",\n                                            icon: \"warning\",\n                                            footer:\n                                              '<a href=\"/cart\">Go to cart</a>'\n                                          });\n                                        } else if (checkStock(item)) {\n                                          dispatch(increaseQuantity(item));\n                                        }\n                                      }}\n                                    >\n                                      Add to Cart\n                                  </Button>\n                                  </>\n                                )}\n                              </th>\n                              <td>{item.item_name}</td>\n                              <td>{item.item_desc}</td>\n                              <td>{item.item_price}</td>\n                              <td>{item.item_quantity}</td>\n                              {/* <td>\n                                                                <img\n                                                                    src={`${item.pic}`}\n                                                                    alt={item.name}\n                                                                    width=\"100px\"\n                                                                    height=\"100px\"\n                                                                />\n                                                            </td> */}\n                            </tr>\n                          </tbody>\n                        ))}\n                    </Table>\n                  </ListGroupItem>\n                </CSSTransition>\n              </TransitionGroup>\n            </ListGroup>\n          </Container>\n        }\n        <AddItem />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </>\n    );\n};\n\nexport default ItemsList;\n","import React, { useState, useEffect, Suspense } from \"react\";\nimport { withRouter } from \"react-router-dom\"\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateItem, deleteItem } from '../../actions/itemsActions'\nimport { clearErrors } from \"../../actions/errorActions\";\nimport axios from \"axios\";\nimport { ListGroupItem, Button, Input, Alert, Spinner } from \"reactstrap\";\n\nimport Swal from \"sweetalert2\";\n\nconst EditItem = (props) => {\n    const dispatch = useDispatch()\n    const state = useSelector(state => state)\n    const itemID = props.match.params.id;\n    const [item, setItem] = useState({\n        item_type: \"l\",\n        item_name: \"l\",\n        item_number: \"l\",\n        item_desc: \"l\",\n        item_price: \"l\",\n        item_quantity: \"l\",\n        item_image: \"l\",\n        _id: \"l\"\n    });\n    const [newType, setNewType] = useState(item.item_type);\n    const [newName, setNewName] = useState(item.name);\n    const [newNumber, setNewNumber] = useState(item.item_number);\n    const [newDescription, setNewDescription] = useState(item.item_desc);\n    const [newPrice, setNewPrice] = useState(item.item_price);\n    const [newQuantity, setNewQuantity] = useState(item.item_quantity);\n    const [newPic, setNewPic] = useState(item.item_image);\n    const [newID, setNewID] = useState(item._id);\n    useEffect(() => {\n        async function fetchData() {\n            // You can await here\n            const result = await axios(`/api/items/single/${itemID}`);\n            if (result.data !== null) {\n                await setItem(result.data);\n                await setNewType(item.item_type)\n                await setNewName(item.item_name)\n                await setNewNumber(item.item_number)\n                await setNewDescription(item.item_desc)\n                await setNewPrice(item.item_price)\n                await setNewQuantity(item.item_quantity)\n                await setNewPic(item.item_image)\n                await setNewID(item._id)\n            }\n        }\n        fetchData();\n        // eslint-disable-next-line\n    }, [item.item_type, item.item_name, item.item_number, item.item_desc, item.item_price, item.item_quantity, item.item_image]);\n\n    const handleUpdate = (e, itemId) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"Do you want to update this item?\",\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, update it!'\n        }).then((result) => {\n            if (result.value) {\n                dispatch(updateItem({\n                    id: itemId,\n                    item: {\n                        item_type: newType,\n                        item_name: newName,\n                        item_number: newNumber,\n                        item_desc: newDescription,\n                        item_price: newPrice,\n                        item_quantity: newQuantity,\n                        item_image: newPic\n                    }\n                }));\n            }\n        })\n    };\n\n    const handleDelete = (e, itemId) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"Do you want to delete item permanently?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, remove it!'\n        }).then((result) => {\n            if (result.value) {\n                dispatch(deleteItem(newID))\n                props.history.push('/')\n            }\n            else {\n                Swal.fire({\n                    title: 'Please contact admin',\n                    text: \"Deleting item was not allowed.\",\n                    icon: 'error',\n                    confirmButtonColor: '#3085d6'\n                })\n            }\n        })\n\n    };\n\n    useEffect(() => {\n        clearErrors()\n    }, [state.error]);\n\n    if (!itemID || (item._id !== itemID)) {\n        return (\n            <Suspense fallback={<Spinner color=\"dark\" />}>\n                <Spinner color=\"dark\" />\n            </Suspense>\n        )\n    }\n    return (\n        <Suspense fallback={<Spinner color=\"dark\" />}>\n            <>\n\n                <div className=\"edit-container\" style={{ margin: \"3rem\" }}>\n                    <div className=\"form-group edit-container-form\">\n                        {state.error.msg !== null && (\n                            <Alert color=\"danger\">{state.error.msg.msg}</Alert>\n                        )}\n                        <h2 className=\"edit-header\">{newName}</h2>\n                        <ListGroupItem>\n                            <h5>Type of Item</h5>\n                            <Input\n                                type=\"select\"\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"update Item Type\"\n                                value={`${newType}`}\n                                onChange={e => setNewType(e.target.value)}\n                            >\n                                <option>part</option>\n                                <option>service</option>\n                            </Input>\n                            <h5>Item Name</h5>\n                            <Input\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"update Item Name\"\n                                value={`${newName}`}\n                                onChange={e => setNewName(e.target.value)}\n                            />\n                            <h5>Item Number</h5>\n                            <Input\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"update Item Name\"\n                                value={`${newNumber}`}\n                                onChange={e => setNewNumber(e.target.value)}\n                            />\n                            <h5>Description</h5>\n                            <Input\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"update Item description\"\n                                value={`${newDescription}`}\n                                onChange={e => setNewDescription(e.target.value)}\n                            />\n                            <h5>Price</h5>\n                            <Input\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"update Item price\"\n                                type=\"text\"\n                                value={`${newPrice}`}\n                                onChange={e => setNewPrice(e.target.value)}\n                            />\n\n                            <h5>Quantity</h5>\n                            <button\n                                className=\"minus btn btn-info outline\"\n                                onClick={e => setNewQuantity(newQuantity => newQuantity - 1)}\n                            >\n                                -\n            </button>\n                            <input type=\"text\" value={`${newQuantity}`} readOnly />\n                            <button\n                                className=\"plus btn btn-info outline\"\n                                onClick={e => setNewQuantity(newQuantity => newQuantity + 1)}\n                            >\n                                +\n            </button>\n                            <h5>Image</h5>\n                            <Input\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"update Item image\"\n                                value={`${newPic}`}\n                                onChange={e => setNewPic(e.target.value)}\n                            />\n                            <br />\n                            <Button\n                                color=\"secondary\"\n                                outline\n                                size=\"sm\"\n                                onClick={e => handleUpdate(e, item._id)}\n                            >\n                                Update Item\n            </Button>\n                            <Button\n                                color=\"secondary\"\n                                outline\n                                size=\"sm\"\n                                onClick={e => handleDelete(e, item._id)}\n                            >\n                                Delete Item\n            </Button>\n                        </ListGroupItem>\n                    </div>\n                    <div className=\"edit-container-img\">\n                        <img src={`${newPic}`} alt={newName} width=\"300px\" height=\"300px\" />\n                        <div className=\"edit-container-link\" style={{ marginTop: \"1rem\" }}>\n                            <Button color=\"dark\" href=\"/\" block>\n                                Go Back to Item List\n            </Button>\n                        </div>\n                    </div>\n                </div>\n            </>\n        </Suspense>\n    )\n}\n\nexport default withRouter(EditItem)","import React, { useState, useEffect, Suspense } from \"react\";\nimport { withRouter } from \"react-router-dom\"\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateVehicle, deleteVehicle } from '../../actions/vehicleActions'\nimport { clearErrors } from \"../../actions/errorActions\";\nimport axios from \"axios\";\nimport { ListGroupItem, Button, ButtonGroup, Input, Alert, Spinner } from \"reactstrap\";\n\nimport Swal from \"sweetalert2\";\n\nconst EditVehicle = (props) => {\n    const dispatch = useDispatch()\n    const state = useSelector(state => state)\n    const vehicleID = props.match.params.id;\n    const [vehicle, setVehicle] = useState({\n        vehicle_type: \"van\",\n        vehicle_name: \"SUV Roja\",\n        vehicle_number: \"342dk\",\n        vehicle_make: \"Ford\",\n        vehicle_model: \"Explorer\",\n        vehicle_year: \"2020\",\n        vehicle_mileage: \"1000\",\n        vehicle_state: \"MA\",\n        vehicle_desc: \"Explorer Roja\",\n        vehicle_image: \"https://shop.ford.com/content/dam/shop_ford/en_us/common/resources/common/nameplate/2020/explorer/assetChoosePathLeft.png\",\n    });\n    const [newType, setNewType] = useState(vehicle.vehicle_type);\n    const [newName, setNewName] = useState(vehicle.vehicle_name);\n    const [newNumber, setNewNumber] = useState(vehicle.vehicle_number);\n    const [newMake, setNewMake] = useState(vehicle.vehicle_make);\n    const [newModel, setNewModel] = useState(vehicle.vehicle_model);\n    const [newYear, setNewYear] = useState(vehicle.vehicle_year);\n    const [newMileage, setNewMileage] = useState(vehicle.vehicle_mileage);\n    const [newState, setNewState] = useState(vehicle.vehicle_state);\n    const [newDescription, setNewDescription] = useState(vehicle.vehicle_desc);\n    const [newPic, setNewPic] = useState(vehicle.vehicle_image);\n\n    useEffect(() => {\n        async function fetchData() {\n            // You can await here\n            const result = await axios(`/api/vehicles/single/${vehicleID}`);\n            if (result.data !== null) {\n                await setVehicle(result.data);\n                await setNewType(vehicle.vehicle_type)\n                await setNewName(vehicle.vehicle_name);\n                await setNewNumber(vehicle.vehicle_number)\n                await setNewMake(vehicle.vehicle_make)\n                await setNewModel(vehicle.vehicle_model);\n                await setNewYear(vehicle.vehicle_year)\n                await setNewMileage(vehicle.vehicle_mileage);\n                await setNewState(vehicle.vehicle_state)\n                await setNewDescription(vehicle.vehicle_desc);\n                await setNewPic(vehicle.vehicle_image);\n            }\n        }\n        fetchData();\n        // eslint-disable-next-line\n    }, [vehicle.vehicle_type, vehicle.vehicle_name, vehicle.vehicle_number, vehicle.vehicle_make,\n    vehicle.vehicle_model,\n    vehicle.vehicle_year,\n    vehicle.vehicle_mileage,\n    vehicle.vehicle_state, vehicle.vehicle_desc, vehicle.vehicle_image]);\n\n    const handleUpdate = (e, vehicleId) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"Do you want to update this vehicle?\",\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, update it!'\n        }).then((result) => {\n            if (result.value) {\n                dispatch(updateVehicle({\n                    id: vehicleId,\n                    vehicle: {\n                        vehicle_type: newType,\n                        vehicle_name: newName,\n                        vehicle_number: newNumber,\n                        vehicle_make: newMake,\n                        vehicle_model: newModel,\n                        vehicle_year: newYear,\n                        vehicle_mileage: newMileage,\n                        vehicle_state: newState,\n                        vehicle_desc: newDescription,\n                        vehicle_image: newPic\n                    }\n                }));\n            }\n        })\n    };\n\n    const handleDelete = (e, vehicleId) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"Do you want to delete Vehicle permanently?\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, remove it!'\n        }).then((result) => {\n            if (result.value) {\n                dispatch(deleteVehicle(vehicleID))\n                props.history.push('/')\n            }\n            else {\n                Swal.fire({\n                    title: 'Please contact admin',\n                    text: \"Deleting item was not allowed.\",\n                    icon: 'error',\n                    confirmButtonColor: '#3085d6'\n                })\n            }\n        })\n\n    };\n\n    useEffect(() => {\n        clearErrors()\n    }, [state.error]);\n\n    if (!vehicleID || (vehicle._id !== vehicleID)) {\n        return (\n            <Suspense fallback={<Spinner color=\"dark\" />}>\n                <Spinner color=\"dark\" />\n            </Suspense>\n        )\n    }\n    return (\n        <Suspense fallback={<Spinner color=\"dark\" />}>\n            <>\n\n                <div className=\"edit-container\" style={{ margin: \"3rem\" }}>\n                    <div className=\"form-group edit-container-form\">\n                        {state.error.msg !== null && (\n                            <Alert color=\"danger\">{state.error.msg.msg}</Alert>\n                        )}\n                        <h2 className=\"edit-header\">{newName}</h2>\n                        <ListGroupItem>\n                            <h5>Type of Vehicle</h5>\n                            <ButtonGroup size=\"sm\">\n                                <Button onClick={() => setNewType('van')} style={newType === 'van' ? { backgroundColor: 'coral' } : {}}>Van</Button>\n                                <Button onClick={() => setNewType('car')} style={newType === 'car' ? { backgroundColor: 'coral' } : {}}>Car</Button>\n                                <Button onClick={() => setNewType('bus')} style={newType === 'bus' ? { backgroundColor: 'coral' } : {}}>Bus</Button>\n                            </ButtonGroup>\n                            <h5>Vehicle Name</h5>\n                            <Input\n                                required\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"Update Vehicle Name\"\n                                value={`${newName}`}\n                                onChange={e => setNewName(e.target.value)}\n                            />\n                            <h5>Vehicle Plate</h5>\n                            <Input\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"Update Vehicle Plate\"\n                                value={`${newNumber}`}\n                                onChange={e => setNewNumber(e.target.value)}\n                            />\n                            <h5>Vehicle Make</h5>\n                            <Input\n                                required\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"Update Vehicle Make\"\n                                value={`${newMake}`}\n                                onChange={e => setNewMake(e.target.value)}\n                            />\n                            <h5>Vehicle Model</h5>\n                            <Input\n                                required\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"Update Vehicle Model\"\n                                value={`${newModel}`}\n                                onChange={e => setNewModel(e.target.value)}\n                            />\n                            <h5>Vehicle Year</h5>\n                            <Input\n                                required\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"Update Vehicle Year\"\n                                value={`${newYear}`}\n                                onChange={e => setNewYear(e.target.value)}\n                            />\n                            <h5>Vehicle Mileage</h5>\n                            <Input\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"Update Vehicle Mileage\"\n                                value={`${newMileage}`}\n                                onChange={e => setNewMileage(e.target.value)}\n                            />\n                            <h5>Vehicle State</h5>\n                            <Input\n                                required\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"Update Vehicle State\"\n                                value={`${newState}`}\n                                onChange={e => setNewState(e.target.value)}\n                            />\n                            <h5>Description</h5>\n                            <Input\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"update Vehicle description\"\n                                value={`${newDescription}`}\n                                onChange={e => setNewDescription(e.target.value)}\n                            />\n\n                            <h5>Image</h5>\n                            <Input\n                                required\n                                className=\" form-control col-xs-2\"\n                                placeholder=\"update Vehicle image\"\n                                value={`${newPic}`}\n                                onChange={e => setNewPic(e.target.value)}\n                            />\n                            <br />\n                            <Button\n                                color=\"secondary\"\n                                outline\n                                size=\"sm\"\n                                onClick={e => handleUpdate(e, vehicle._id)}\n                            >\n                                Update Vehicle\n            </Button>\n                            <Button\n                                color=\"secondary\"\n                                outline\n                                size=\"sm\"\n                                onClick={e => handleDelete(e, vehicle._id)}\n                            >\n                                Delete Vehicle\n            </Button>\n                        </ListGroupItem>\n                    </div>\n                    <div className=\"edit-container-img\">\n                        <img src={`${newPic}`} alt={newName} width=\"300px\" height=\"300px\" />\n                        <div className=\"edit-container-link\" style={{ marginTop: \"1rem\" }}>\n                            <Button color=\"dark\" href=\"/\" block>\n                                Go Back to Vehicle List\n            </Button>\n                        </div>\n                    </div>\n                </div>\n            </>\n        </Suspense>\n    )\n}\n\nexport default withRouter(EditVehicle)","export const currentCartTotal = (cart) => {\n    if (cart.length) {\n        let quant = cart.map((item) => item.item_total);\n        quant = quant.reduce((acc, curr) => acc + curr);\n        let result = Math.round(quant * 100) / 100\n        return result\n    }\n}","import { useState } from \"react\";\n\nconst useForm = initialValues => {\n  const [values, setValues] = useState(initialValues);\n\n  return [\n    values,\n    e => {\n      setValues({\n        ...values,\n        [e.target.name]: e.target.value\n      });\n    }\n  ];\n};\nexport default useForm;\n","import axios from \"axios\";\nimport {\n  POST_TRANSACTION,\n  SET_CHECKOUT_LOADING,\n  SET_INVOICE,\n  CLEAR_INVOICE,\n  DELETE_CART_VEHICLE,\n  EMPTY_CART\n} from \"../actions/types\";\nimport { tokenConfig } from \"./authActions\";\nimport {\n  returnErrors\n  // ,clearErrors\n} from \"./errorActions\";\nimport Swal from 'sweetalert2'\nexport const postTransaction = (data) => (dispatch, getState) => {\n  console.log(data)\n  dispatch(setCheckoutLoading());\n  axios\n    .post(\"/api/item-checkout\", data, tokenConfig(getState))\n    .then(res => dispatch({\n      type: POST_TRANSACTION,\n      payload: res.data\n    })).then(res => {\n      dispatch({\n        type: DELETE_CART_VEHICLE,\n        payload: []\n      })\n      dispatch({\n        type: EMPTY_CART,\n        payload: []\n      })\n    })\n    .catch(err => {\n      Swal.fire({\n        title: 'Could not complete Transaction',\n        text: err.response.data.msg,\n        icon: 'error',\n        confirmButtonColor: '#3085d6',\n        footer: '<a href=\"/\">Check inventory</a>'\n      })\n      dispatch(returnErrors(err.response.data, err.response.status))\n    })\n}\n\nexport const setInvoice = (trans) => dispatch => {\n  dispatch(setCheckoutLoading(trans));\n  return dispatch({\n    type: SET_INVOICE,\n    payload: trans\n  });\n}\nexport const clearInvoice = () => dispatch => {\n  dispatch(setCheckoutLoading());\n  return dispatch({\n    type: CLEAR_INVOICE\n  });\n}\n\n\nexport const setCheckoutLoading = () => dispatch => {\n  return dispatch({\n    type: SET_CHECKOUT_LOADING\n  });\n};\n","import React, { useEffect, useState } from 'react'\nimport { withRouter, Link, useHistory } from 'react-router-dom'\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\n//Components\nimport {\n    Button,\n    Container,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Col,\n    ListGroupItem,\n    Table,\n    ButtonGroup\n\n    //   Alert\n} from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { Checkbox, Segment } from 'semantic-ui-react'\nimport Swal from \"sweetalert2\";\nimport { increaseQuantity, decreaseQuantity, deleteCartVehicle, cartTotal } from '../../actions/cartItemsActions';\nimport { clearErrors } from \"../../actions/errorActions\";\nimport { currentCartTotal } from '../../hooks/currentCartAmount';\nimport useForm from '../../hooks/useForm';\nimport { postTransaction } from '../../actions/checkoutActions';\n\nconst CheckoutTransac = (props) => {\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const state = useSelector(state => state)\n    const cart = useSelector(state => state.cartItems)\n    const cartItems = cart.cart\n    const vehicleInCart = cart.vehicle ? cart.vehicle : null\n    // Transaction State\n    const [newType, setNewType] = useState('internal');\n    const [applySale, setApplySale] = useState(false)\n    const [discount, setDiscount] = useState(0)\n\n    //Apply a discount\n    const applyDiscount = (total, percent = 0) => {\n        if (newType === \"internal\") {\n            setDiscount(0)\n            return\n        }\n        let discounted = (total * (percent / 100))\n        setDiscount(discounted)\n        return\n    }\n    // Calculate Taxes\n    const calcTaxes = (subtotal, taxRate = 0.0625) => {\n        if (newType === \"internal\") { return 0 }\n        if (applySale) {\n            return Math.round((subtotal - discount) * taxRate * 100) / 100\n        } else {\n            return Math.round(subtotal * taxRate * 100) / 100\n        }\n\n    }\n\n    const [user, handleChange] = useForm({\n        name: \"\",\n        phone: \"\",\n        email: \"\",\n        operator: \"\",\n        type: \"\",\n        amountReceived: \"\",\n        message: \"\",\n        percentage: 0\n    });\n\n\n    useEffect(() => {\n\n        // eslint-disable-next-line\n    }, [newType]);\n\n    // Post Transaction\n    const onSubmit = (e, newType, user, vehicleInCart, cartItems, subtotal, applySale = false, applyDiscount = 0, calcTaxes = 0, grandTotal = 0) => {\n        e.preventDefault();\n        // Set Transaction object\n        const sendTrans = async () => {\n            if (!currentCartTotal(cartItems)) {\n                Swal.fire(\n                    \"No customer information\",\n                    \"Please enter all the customer's info.\",\n                    'error'\n                )\n                return;\n            } else {\n                try {\n                    if (newType === \"internal\") {\n                        await dispatch(postTransaction({\n                            transaction: {\n                                transac_type: newType,\n                                transac_operator: user.operator,\n                                transac_customer: {},\n                                transac_vehicle: vehicleInCart,\n                                transac_items: cartItems,\n                                sale_transac: applySale,\n                                transac_subtotal: subtotal,\n                                transac_discount: 0,\n                                transac_taxes: 0,\n                                transac_total: subtotal,\n                                amount_received: 0,\n                                transac_message: user.message,\n                            }\n                        })\n                        )\n                    }\n                    else if (newType === \"external\") {\n                        await dispatch(postTransaction({\n                            transaction: {\n                                transac_type: newType,\n                                transac_operator: user.operator,\n                                transac_customer: { name: user.name, phone: user.phone, email: user.email },\n                                transac_vehicle: vehicleInCart,\n                                transac_items: cartItems,\n                                sale_transac: applySale,\n                                transac_subtotal: subtotal,\n                                transac_discount: discount,\n                                transac_taxes: calcTaxes,\n                                transac_total: grandTotal,\n                                amount_received: user.amountReceived,\n                                transac_message: user.message,\n                            }\n                        })\n                        )\n                    }\n                    window.location.replace(`/dashboard`)\n                } catch (err) {\n                    console.log(err)\n                }\n            }\n        };\n        sendTrans();\n    };\n\n\n\n\n\n    return (\n        <>\n            <Container\n                style={{\n                    marginTop: \"5rem\",\n                    padding: \"2rem\",\n                    justifyContent: \"center\",\n                    alignContent: \"center\",\n                    alignItems: \"center\"\n                }}\n            >\n                <Col xs=\"12\">\n                    <h4>Checkout</h4>\n                    <Form onSubmit={(e) => {\n                        newType === 'external' ? onSubmit(e, newType, user, vehicleInCart, cartItems, currentCartTotal(cartItems), applySale, discount, calcTaxes(currentCartTotal(cartItems)), (currentCartTotal(cartItems) + calcTaxes(currentCartTotal(cartItems))).toFixed(2)) : onSubmit(e, newType, user, vehicleInCart, cartItems, currentCartTotal(cartItems))\n                    }} style={{ marginTop: \"2rem\" }}>\n                        <FormGroup>\n                            <section\n                                style={{\n                                    border: \"1px solid #ccc\",\n                                    borderRadius: \"5px\",\n                                    marginBottom: \"20px\",\n                                    padding: '2rem'\n                                }}\n                            >\n\n                                <Label for=\"newType\">Type of Transaction</Label><br />\n                                <ButtonGroup size=\"sm\">\n                                    <Button onClick={() => setNewType('internal')} style={newType === 'internal' ? { backgroundColor: 'coral' } : {}}>Internal</Button>\n                                    <Button onClick={() => setNewType('external')} style={newType === 'external' ? { backgroundColor: 'coral' } : {}}>External</Button>\n                                </ButtonGroup>\n                                <br />\n                                <br />\n                                {/* Dont required customer data for now */}\n\n                                {newType === 'external' && (\n                                    <>\n                                        <Label for=\"name\">Customer Full Name</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"name\"\n                                            id=\"name\"\n                                            placeholder=\"Full Name\"\n                                            className=\"mb-3\"\n                                            value={user.name}\n                                            onChange={handleChange}\n                                        />\n\n                                        <Label for=\"email\">Email</Label>\n                                        <Input\n                                            type=\"email\"\n                                            name=\"email\"\n                                            id=\"email\"\n                                            placeholder=\"Email\"\n                                            className=\"mb-3\"\n                                            value={user.email}\n                                            onChange={handleChange}\n                                        />\n\n                                        <Label for=\"phone\">Phone Number</Label>\n                                        <Input\n                                            type=\"phone\"\n                                            name=\"phone\"\n                                            id=\"phone\"\n                                            placeholder=\"Phone Number\"\n                                            className=\"mb-3\"\n                                            value={user.phone}\n                                            onChange={handleChange}\n                                        />\n                                        <Label for=\"amountReceived\">Amount Received</Label>\n                                        <Input\n                                            type=\"number\"\n                                            name=\"amountReceived\"\n                                            id=\"amountReceived\"\n                                            placeholder=\"Amount Received from customer\"\n                                            className=\"mb-3\"\n                                            value={user.amountReceived}\n                                            onChange={handleChange}\n                                            required\n                                        />\n                                    </>)}\n                                <Label for=\"message\">Message</Label>\n                                <Input\n                                    type=\"textarea\"\n                                    name=\"message\"\n                                    id=\"message\"\n                                    placeholder=\"Do you need to leave a message?\"\n                                    className=\"mb-3\"\n                                    value={user.message}\n                                    onChange={handleChange}\n                                />\n                                <Label for=\"operator\">Operator</Label>\n                                <Input\n                                    type=\"operator\"\n                                    name=\"operator\"\n                                    id=\"operator\"\n                                    placeholder=\"Operator's name\"\n                                    className=\"mb-3\"\n                                    value={user.operator}\n                                    onChange={handleChange}\n                                    required\n                                />\n                                {newType === 'external' && (<Segment compact>\n                                    <Checkbox toggle checked={applySale} onChange={() => setApplySale(!applySale)} label='Apply Discount' />\n                                    {applySale && <>\n                                        <span className='form-inline'>\n                                            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                                                <Label for=\"Discount\" className=\"mr-sm-2\">Discount &#37;</Label>\n                                                <Input\n                                                    type=\"percentage\"\n                                                    name=\"percentage\"\n                                                    id=\"percentage\"\n                                                    placeholder=\"Enter percentage\"\n                                                    value={user.percentage}\n                                                    onChange={handleChange}\n                                                />\n                                            </FormGroup>\n                                            <Button onClick={() => applyDiscount(currentCartTotal(cartItems), user.percentage)}>Apply Discount</Button>\n                                        </span>\n                                    </>}\n\n\n                                </Segment>)}\n                            </section>\n\n                            <ListGroupItem style={{ float: \"right\", marginBottom: \"1rem\" }}>\n                                {newType === 'external' && (<>Subtotal: <strong> ${currentCartTotal(cartItems)}</strong>\n                                    <br /></>)}\n                                {newType === 'external' && discount > 0 && applySale && <><span>Discount: <strong><del>${discount.toFixed(2)}</del></strong></span><br /></>}\n\n                                {newType === 'external' &&\n                                    (<>\n                                        Taxes(6.25 %): {\" \"}\n                                        <strong>\n                                            {\" \"}\n                                            ${calcTaxes(currentCartTotal(cartItems))}\n                                        </strong>{\" \"}\n                                        <br />\n                                        <hr /></>)}\n                                Grand Total: <strong> ${newType === 'internal' ? currentCartTotal(cartItems) : applySale ? ((currentCartTotal(cartItems) - discount) + calcTaxes(currentCartTotal(cartItems))).toFixed(2) : (currentCartTotal(cartItems) + calcTaxes(currentCartTotal(cartItems))).toFixed(2)}</strong> <br />\n                            </ListGroupItem>\n                            <Button color=\"dark\" style={{ marginTop: \"0rem\" }} block>\n                                Confirm Transaction\n              </Button>\n                        </FormGroup>\n                    </Form>\n                </Col>\n            </Container>\n        </>\n    )\n}\nexport default withRouter(CheckoutTransac)","import React, { useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\n//Components\nimport { Container, ListGroup, ListGroupItem, Button, Table, Alert } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Swal from \"sweetalert2\";\nimport { increaseQuantity, decreaseQuantity, deleteCartVehicle, cartTotal, deleteItem } from '../../actions/cartItemsActions';\nimport { clearErrors } from \"../../actions/errorActions\";\nimport { currentCartTotal } from '../../hooks/currentCartAmount';\nconst CartItems = (props) => {\n    const dispatch = useDispatch()\n    const state = useSelector(state => state)\n    const cart = useSelector(state => state.cartItems)\n    const cartItems = cart.cart\n    const vehicleInCart = cart.vehicle ? cart.vehicle : null\n    useEffect(() => {\n        dispatch(clearErrors())\n        // eslint-disable-next-line\n    }, [cart]);\n    useEffect(() => {\n        dispatch(clearErrors())\n        // eslint-disable-next-line\n    }, [state.errors]);\n    if (!cartItems || !vehicleInCart) {\n        return (\n            <>\n                <Container>\n                    <h2>You have no Items!</h2>\n                    <h6>Add a Items to your list.</h6>\n                </Container>\n            </>\n        )\n    }\n    return (\n        <>\n\n            <Container style={{ marginTop: \"5rem\" }}>\n                {state.error.msg !== null && (\n                    <Alert color=\"danger\">{state.error.msg.msg}</Alert>\n                )}\n                <h2>Your Current Transaction</h2>\n                {/* Cart Vehicle */}\n                <ListGroup>\n                    <TransitionGroup className=\"shopping-list\">\n                        <CSSTransition timeout={0} classNames=\"fade\">\n                            <ListGroupItem>\n                                <h4>Vehicle</h4>\n                                <hr />\n                                <Table\n                                    hover\n                                    responsive\n                                    borderless\n                                    style={{ overflowX: \"auto\" }}\n                                >\n                                    <thead>\n                                        <tr>\n\n                                            <th></th>\n                                            <th><img\n                                                src={`${vehicleInCart.vehicle_image}`}\n                                                alt={vehicleInCart.vehicle_name}\n                                                width=\"100px\"\n                                                height=\"100px\"\n                                            /></th>\n                                            <th>Vehicle Plate</th>\n                                            <th>Vehicle Name</th>\n                                            <th>Vehicle Mileage</th>\n\n                                        </tr>\n                                    </thead>\n                                    <tbody\n                                        key={vehicleInCart._id}\n                                        style={{\n                                            backgroundColor: null\n                                        }}\n                                    >\n                                        <tr>\n                                            <th scope=\"row\" />\n                                            <td className={`d-flex flex-column`} style={{ width: '100px' }}>\n\n                                                <>\n                                                    <Button\n                                                        className=\"remove-btn\"\n                                                        color=\"danger\"\n                                                        size=\"sm\"\n                                                        outline\n                                                        style={{ fontSize: \"11px\", width: '100px' }}\n                                                        onClick={() => { dispatch(deleteCartVehicle()) }}\n                                                    >\n                                                        Remove\n                                                    </Button>\n                                                </>\n                                            </td>\n                                            <td >{vehicleInCart.vehicle_number}</td>\n                                            <td>{vehicleInCart.vehicle_name}</td>\n                                            <td>{vehicleInCart.vehicle_mileage}</td>\n                                        </tr>\n                                    </tbody>\n                                    {/* ))} */}\n                                </Table>\n                            </ListGroupItem>\n                        </CSSTransition>\n                    </TransitionGroup>\n                </ListGroup>\n                {/* End Cart Vehicle */}\n                {cartItems.length && (<><ListGroup>\n                    <TransitionGroup className=\"shopping-list\">\n                        <CSSTransition timeout={0} classNames=\"fade\">\n                            <ListGroupItem>\n                                <h4>{`Parts & Services`}</h4>\n                                <hr />\n                                <Table\n                                    hover\n                                    responsive\n                                    borderless\n                                    style={{ overflowX: \"auto\" }}\n                                >\n                                    <thead>\n                                        <tr>\n                                            <th />\n                                            <th />\n                                            <th />\n                                            <th>Quantity</th>\n                                            <th>Item Price</th>\n                                            <th>Item Total</th>\n                                        </tr>\n                                    </thead>\n                                    {cartItems.map(item => (\n                                        <tbody key={item._id}>\n                                            <tr>\n                                                <th scope=\"row\" />\n                                                <td>\n                                                    <img\n                                                        src={`${item.item_image}`}\n                                                        alt={item.item_name}\n                                                        width=\"100px\"\n                                                        height=\"100px\"\n                                                    />\n                                                </td>\n                                                <td>{item.item_name}</td>\n\n                                                <td>\n                                                    <Link\n                                                        to={{\n                                                            pathname: `/cart`,\n                                                            state: { item }\n                                                        }}\n                                                    >\n                                                        <Button\n                                                            className=\"edit-btn\"\n                                                            size=\"sm\"\n                                                            outline\n                                                            onClick={e => dispatch(decreaseQuantity(item))}\n                                                            style={{ fontSize: \"10px\", margin: \"4px\" }}\n                                                        >\n                                                            -\n                              </Button>\n                                                    </Link>\n                                                    {item.item_quantity}\n                                                    <Link\n                                                        to={{\n                                                            pathname: `/cart`,\n                                                            state: { item }\n                                                        }}\n                                                    >\n                                                        <Button\n                                                            className=\"edit-btn\"\n                                                            outline\n                                                            size=\"sm\"\n                                                            onClick={() => dispatch(increaseQuantity(item))}\n                                                            style={{ fontSize: \"10px\", margin: \"4px\" }}\n                                                        >\n                                                            +\n                              </Button>\n                                                    </Link>\n                                                    <br />\n                                                    <Button\n                                                        className=\"remove-btn\"\n                                                        color=\"danger\"\n                                                        size=\"sm\"\n                                                        outline\n                                                        onClick={e => dispatch(deleteItem(item))}\n                                                        style={{ fontSize: \"11px\", margin: \"2px\" }}\n                                                    >\n                                                        &times; remove\n                            </Button>\n                                                </td>\n                                                <td>${item.item_price}</td>\n                                                <td>${(item.item_price * item.item_quantity).toFixed(2)}</td>\n                                            </tr>\n                                        </tbody>\n                                    ))}\n                                </Table>\n                            </ListGroupItem>\n                        </CSSTransition>\n                    </TransitionGroup>\n                </ListGroup>\n                    <ListGroupItem style={{ float: \"right\" }}>\n                        Subtotal: <strong> ${currentCartTotal(cartItems)}</strong> <br />\n                    </ListGroupItem></>)}\n                <ListGroupItem style={{ float: \"left\" }}>\n                    <Link to={\"/\"}>\n                        <Button>Go back Home</Button>\n                    </Link>\n                </ListGroupItem>\n            </Container>\n        </>\n    )\n}\nexport default withRouter(CartItems)","import React, { useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CheckoutTransac from './CheckoutTransac';\nimport CartItems from './CartItems';\n\nexport const Cart = () => {\n    const dispatch = useDispatch()\n    const checkout = useSelector(state => state.checkout)\n    useEffect(() => {\n        console.log(checkout)\n    }, [checkout])\n    return (\n        <div>\n            <CartItems />\n            <CheckoutTransac />\n        </div>\n    )\n}\n\nexport default withRouter(Cart)","import React, { useEffect, useState } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { useSelector } from 'react-redux'\nimport axios from \"axios\";\n\n// const Invoice = ({ invoiceNumber, user, books, subtotal, taxes, total, sale_price = null, amount_received = null, sale = false, discount = 0 }) => {\nconst Invoice = ({ id,\n  invoice_number,\n  transac_type,\n  transac_items,\n  transac_status,\n  transac_operator,\n  transac_vehicle,\n  sale_transac,\n  transac_customer,\n  transac_subtotal,\n  transac_discount,\n  transac_taxes,\n  transac_total,\n  amount_received,\n  transac_message,\n  transac_date }) => {\n\n  const PrintPage = () => {\n    window.print();\n  };\n  const invoiceLogo = \"http://www.fivestars.com.my/images/AgentSite/FiveStars/logo.png\"\n\n  let totalVariable = sale_transac ? 'Subtotal' : 'Grand Total'\n\n  // vehicle\n  const vehicles = useSelector(state => state.vehicles)\n  const [car, setCar] = useState(null)\n\n  useEffect(() => {\n    axios.get(`/api/vehicles/single/${transac_vehicle}`).then(data => { console.log(data.data); setCar(data.data) })\n  }, [])\n  return (\n    <>\n      {/* <Button onClick={() => PrintPage()} variant=\"outline-light\">Print Invoice</Button> */}\n      <i className=\"fas fa-print\" onClick={() => PrintPage()}></i>\n      <Container>\n        <div\n          id=\"divToPrint\"\n          className=\"mt4\"\n          style={{\n            // backgroundColor: \"#f5f5f5\",\n            width: \"218mm\",\n            minHeight: \"297mm\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n        >\n          <div id=\"page-wrap\">\n            <p id=\"header\">INVOICE</p>\n\n            <div id=\"identity\">\n              <p id=\"address\">\n                Five Stars Express\n                <br />\n                600 Essex Street, Lawrence MA 01841\n                <br />\n                Phone: (978) 688-8888\n              </p>\n\n              <div id=\"logo\">\n                <img\n                  id=\"image\"\n                  src={invoiceLogo}\n                  alt=\"logo\"\n                />\n              </div>\n            </div>\n\n            <div style={{ clear: \"both\" }} />\n\n            <div id=\"customer\">\n              {/* Customer, if external transaction */}\n              <p id=\"customer-title\">\n                {transac_type === \"internal\" ? transac_type.toUpperCase() : (\n                  <>\n                    <br />\n                    {transac_customer.name}\n                    <br />\n                    {transac_customer.phone}\n                    <br />\n                    {transac_customer.email}\n                  </>\n                )}\n              </p>\n              <table id=\"meta\">\n                <tbody>\n                  <tr>\n                    <td className=\"meta-head\">Invoice #</td>\n                    <td>\n                      <p>{invoice_number}</p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"meta-head\">Date</td>\n                    <td>\n                      <p id=\"date\">{Date(transac_date).slice(0, 15)}</p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td className=\"meta-head\">Amount Due</td>\n                    <td>\n                      <div className=\"due\">${transac_total}</div>\n                    </td>\n                  </tr>\n                  {amount_received && (<tr>\n                    <td className=\"meta-head\">Amount Received</td>\n                    <td>\n                      <div className=\"due\">${amount_received}</div>\n                    </td>\n                  </tr>)}\n                </tbody>\n              </table>\n            </div>\n            {car && (\n              <>\n                <table id=\"vehicle\">\n                  <tbody>\n                    <tr>\n                      <th>Vehicle Name</th>\n                      <th>Description</th>\n                      <th>Vehicle Plate</th>\n                      <th>Vehicle Type</th>\n                    </tr>\n                  </tbody>\n                  <tbody>\n                    <tr>\n                      <td>{car.vehicle_name}</td>\n                      <td>{car.vehicle_desc}</td>\n                      <td>{car.vehicle_number}</td>\n                      <td>{car.vehicle_type}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </>\n            )}\n            <table id=\"items\">\n              <tbody>\n                <tr>\n                  <th>Item</th>\n                  <th>Description</th>\n                  <th>Unit Cost</th>\n                  <th>Quantity</th>\n                  <th>Price</th>\n                </tr>\n              </tbody>\n              {transac_items.map(item => (\n                <tbody key={item._id}>\n                  <tr className=\"item-row\">\n                    <td className=\"item-name\">\n                      <div className=\"delete-wpr\">\n                        <p>{item.item_name}</p>\n                      </div>\n                    </td>\n                    <td className=\"description\">\n                      <p>{item.item_type}</p>\n                    </td>\n                    <td>\n                      <p className=\"cost\">${item.item_price}</p>\n                    </td>\n                    <td>\n                      <p className=\"qty\">{item.item_quantity}</p>\n                    </td>\n                    <td>\n                      <span className=\"price\">\n                        ${(item.item_price * item.item_quantity).toFixed(2)}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              ))}\n\n              <tbody>\n                <tr>\n                  <td colSpan=\"2\" className=\"blank\">\n                    {\" \"}\n                  </td>\n                  <td colSpan=\"2\" className=\"total-line\">\n                    Subtotal\n                  </td>\n                  <td className=\"total-value\">\n                    <div id=\"subtotal\">${transac_subtotal}</div>\n                  </td>\n                </tr>\n                {transac_discount > 0 && <tr>\n                  <td colSpan=\"2\" className=\"blank\">\n                    {\" \"}\n                  </td>\n                  <td colSpan=\"2\" className=\"total-line\">\n                    Discount\n                  </td>\n                  <td className=\"total-value\">\n                    <div id=\"subtotal\"><del>${transac_discount.toFixed(2)}</del></div>\n                  </td>\n                </tr>}\n                <tr>\n                  <td colSpan=\"2\" className=\"blank\">\n                    {\" \"}\n                  </td>\n                  <td colSpan=\"2\" className=\"total-line\">\n                    Sales Tax:\n                  </td>\n                  <td className=\"total-value\">\n                    <div id=\"total\">${transac_taxes}</div>\n                  </td>\n                </tr>\n              </tbody>\n\n              <tbody>\n                <tr>\n                  <td colSpan=\"2\" className=\"blank\">\n                    {\" \"}\n                  </td>\n                  <td colSpan=\"2\" className=\"total-line balance\">\n                    {totalVariable}\n                  </td>\n                  <td className=\"total-value balance\">\n                    <div className=\"due\">${transac_total}</div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            {/* <div id=\"terms\">\n              <h5>Terms</h5>\n              <p>\n                NET 30 Days. Finance Charge of 1.5% will be made on unpaid\n                balances after 30 days.\n              </p>\n            </div> */}\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Invoice;\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport Invoice from './Invoice';\n\n\nconst ShowInvoice = (props) => {\n    if (!props.location.state) {\n        window.location.replace(\"/dashboard\")\n    }\n    if (!props.location.state.trans) {\n        return (<div><Link to=\"/dashboard\">Load Invoice from History</Link></div>)\n    }\n    let { _id,\n        invoice_number,\n        transac_type,\n        transac_items,\n        transac_status,\n        transac_operator,\n        transac_customer,\n        transac_vehicle,\n        sale_transac,\n        transac_subtotal,\n        transac_discount,\n        transac_taxes,\n        transac_total,\n        amount_received,\n        transac_message,\n        transac_date } = props.location.state.trans\n\n    return (\n        <div>\n            <Invoice\n                id={_id}\n                invoice_number={invoice_number}\n                transac_type={transac_type}\n                transac_items={transac_items}\n                transac_status={transac_status}\n                transac_operator={transac_operator}\n                transac_customer={transac_customer}\n                transac_vehicle={transac_vehicle}\n                sale_transac={sale_transac}\n                transac_subtotal={transac_subtotal}\n                transac_discount={transac_discount}\n                transac_taxes={transac_taxes}\n                transac_total={transac_total}\n                amount_received={amount_received}\n                transac_message={transac_message}\n                transac_date={transac_date}\n            />\n        </div>\n    )\n}\n\nexport default withRouter(ShowInvoice)","import axios from \"axios\";\nimport {\n  GET_TRANS,\n  SET_TRANS_LOADING\n} from \"./types\";\nimport { tokenConfig } from \"./authActions\";\nimport {\n  returnErrors\n  // , clearErrors \n} from \"./errorActions\";\n\nexport const getTrans = () => (dispatch, getState) => {\n  dispatch(setTransLoading());\n  axios\n    .get(\"/api/item-checkout\", tokenConfig(getState))\n    .then(res => {\n      dispatch({\n        type: GET_TRANS,\n        payload: res.data\n      });\n    })\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const setTransLoading = () => {\n  return {\n    type: SET_TRANS_LOADING\n  };\n};\n","import React from \"react\";\nimport { Modal, Button, Card } from \"semantic-ui-react\";\n\n\n\nconst TransModal = (props) => (\n    <Modal trigger={<Card raised className=\"m-4 \" color='blue'><Button basic color='blue'><p>{props.title}</p> <span className=\".bg-info\"><strong>{props.customer}</strong></span></Button></Card>} centered={true} size='tiny'>\n      <Modal.Header>{props.header}</Modal.Header>\n      <Modal.Content style={{left: '30'}}>\n        {props.children}\n      </Modal.Content>\n    </Modal>\n  )\nexport default TransModal","import React, { useState } from \"react\";\nimport moment from 'moment'\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Container, ListGroup, Card, Spinner, Row, Col, Button } from \"react-bootstrap\";\nimport { setInvoice } from \"../../actions/checkoutActions\";\nimport { Grid, DropdownMenu } from \"semantic-ui-react\";\nimport Invoice from \"../invoice/Invoice\";\nimport TransModal from \"./TransModal\";\nconst Trans = (props) => {\n  const [showInvoice, setShowInvoice] = useState(false)\n  const [transac, setTransac] = useState({})\n  const trans = useSelector(state => state.trans)\n  const dispatch = useDispatch()\n  const setDisplayInvoice = (trans) => {\n    dispatch(setInvoice(trans))\n  }\n  return (\n    <>\n      {!trans.trans.length === 0 && (\n        <div className=\"spinner\">\n          <Spinner animation=\"grow\" variant=\"info\" />\n        </div>\n      )}\n      {trans.trans.length < 1 && (\n        <div>\n          <div style={{ magin: '5rem' }}>you have no trasanctions.</div>\n        </div>\n      )}\n      {trans.trans.length && (\n\n        <Container className='trans-container'>\n          <Row>\n            {trans.trans.map((trans, idx) => (\n              <TransModal title={moment(trans.transac_date).format(\"LLL\")} customer={trans.transac_status} header={moment(trans.transac_date).format(\"LLL\")} key={idx}>\n                <Col sm key={idx}>\n                  <Card key={trans.invoice_number} className='trans-card' style={cardStyle}>\n                    <ListGroup>\n                      <ListGroup.Item action><strong>Invoice number: </strong> {trans.invoice_number}</ListGroup.Item>\n                      <ListGroup.Item><strong>Sale date:</strong> {moment(trans.transac_date).format(\"LLL\")}</ListGroup.Item>\n                      <ListGroup.Item><strong>Transaction total:</strong> ${trans.transac_total}</ListGroup.Item>\n                      <ListGroup.Item><strong>Assistant:</strong> {trans.transac_operator}</ListGroup.Item>\n                      <ListGroup.Item ><Grid columns={1} relaxed='very' stackable>\n                        {trans.transac_type === \"external\" && (<Grid.Column>\n                          <DropdownMenu\n                            size=\"sm\"\n                            variant=\"secondary\"\n                            title=\"Customer\"\n                            key={idx}\n                          >\n                            <h5>Customer</h5>\n                            {trans.transac_customer.name && <p key={trans.transac_customer.name} >Name: {trans.transac_customer.name}</p>}\n                            {trans.transac_customer.email && <p key={trans.transac_customer.email} >Email: {trans.transac_customer.email}</p>}\n                            {trans.transac_customer.phone && <p key={trans.transac_customer.phone} >Phone: {trans.transac_customer.phone}</p>}\n                          </DropdownMenu>\n                        </Grid.Column>)}\n                        <Grid.Column>\n                          <DropdownMenu\n                            size=\"sm\"\n                            variant=\"secondary\"\n                            title=\"Items\"\n                            key={idx}\n                          >\n                            <h5>Items</h5>\n                            <Card.Body>\n                              {trans.transac_items.map((item) => (\n                                <p as={'li'} key={item._id} >({item.item_quantity}) {item.item_name}</p>\n                              ))}\n                            </Card.Body>\n                            {trans.amount_received && (\n                              <>\n                                <h5>Amount Received</h5>\n                                <p as={'li'} key={trans.amount_received} >${trans.amount_received}</p>\n                              </>\n                            )}\n                            {trans.message && (\n                              <>\n                                <h5>Message</h5>\n                                <p as={'li'} key={trans.transac_message} >{trans.transac_message}</p>\n                              </>\n                            )}\n                          </DropdownMenu>\n                        </Grid.Column>\n                      </Grid></ListGroup.Item>\n                    </ListGroup>\n                    <Button variant=\"light\" onClick={() => {\n                      setTransac(trans);\n                      setShowInvoice(!showInvoice);\n                      setDisplayInvoice(trans)\n                      props.history.push({\n                        pathname: '/invoice',\n                        state: { trans }\n                      })\n                    }}>Print invoice</Button>\n                  </Card>\n\n                </Col>\n              </TransModal>\n            ))}\n          </Row>\n\n        </Container>)}\n      {showInvoice && (\n        <div>\n          <Invoice\n            id={trans._id}\n            invoice_number={trans.invoice_number}\n            transac_type={trans.transac_type}\n            transac_items={trans.transac_items}\n            transac_status={trans.transac_status}\n            transac_operator={trans.transac_operator}\n            transac_vehicle={trans.transac_vehicle}\n            sale_transac={trans.sale_transac}\n            transac_subtotal={trans.transac_subtotal}\n            transac_discount={trans.transac_discount}\n            transac_taxes={trans.transac_taxes}\n            transac_total={trans.transac_total}\n            amount_received={trans.amount_received}\n            transac_message={trans.transac_message}\n            transac_date={trans.transac_date}\n          />\n        </div>)}\n    </>\n  );\n};\n\nexport default withRouter(Trans);\n\nconst cardStyle = {\n  display: 'flex',\n  margin: '.3rem',\n  width: \"30rem\",\n  minWidth: '300px',\n  maxWidth: '350px',\n  boxRadius: '0.5rem',\n  boxShadow: 'inset 0 1px 1px rgba(0,0,0, 0.075), 0 0 8px hsla(0, 0%, 76.9%, 0.4)'\n}","import _ from \"lodash\";\nimport moment from 'moment'\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTrans } from '../../actions/transActions'\nimport { withRouter } from \"react-router-dom\";\nimport { Search, Grid, DropdownMenu, Icon } from \"semantic-ui-react\";\nimport { Container, ListGroup, Card, Row, Col, Button } from \"react-bootstrap\";\nimport Invoice from '../invoice/Invoice'\nimport Trans from '../dashboard/Trans'\n\nconst initialState = { isLoading: false, results: [], value: \"\", toggle: false };\n\nclass TransSearch extends Component {\n  state = initialState;\n\n  handleResultSelect = (e, { result }) =>\n    this.setState({ value: result.transac_type, results: [result] });\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState);\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n      const isMatch = result => re.test(`${result.transac_status} ${result.transac_type} ${result.transac_customer ? result.transac_customer.name : ''}  ${result.transac_items.map(x => x.item_name)} ${result.transac_operator} ${moment(result.transac_date).format(\"LLL\")}`);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(this.props.trans, isMatch)\n      });\n    }, 300);\n  };\n\n  render() {\n    const { isLoading, value, results, toggle } = this.state;\n    const trans = results\n\n    return (\n      <Grid>\n        <Grid.Column width={10}>\n          <Search\n            input={{ type: value.length <= 0 ? <Icon name='search' /> : <Icon className='search-icon' name='delete' link onClick={() => this.setState({ isLoading: false, results: [], value: \"\" })} />, iconPosition: 'left' }}\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true\n            })}\n            results={results}\n            resultRenderer={resultRenderer}\n            value={value}\n            {...this.props}\n          />\n        </Grid.Column>\n        {trans.length && (\n          <Container className='trans-container'>\n            <Row>\n              {trans.map((trans, idx) => (\n                <Col sm key={idx}>\n                  <Card key={trans.invoice_number} className='trans-card' style={cardStyle}>\n                    <ListGroup>\n                      <ListGroup.Item action><strong>Status: </strong> {trans.transac_status}</ListGroup.Item>\n                      <ListGroup.Item action><strong>Invoice number: </strong> {trans.invoice_number}</ListGroup.Item>\n                      <ListGroup.Item><strong>Sale date:</strong> {moment(trans.transac_date).format(\"LL\")}</ListGroup.Item>\n                      <ListGroup.Item><strong>Transaction total:</strong> ${trans.transac_total}</ListGroup.Item>\n                      <ListGroup.Item><strong>Assistant:</strong> {trans.transac_operator}</ListGroup.Item>\n                      <ListGroup.Item ><Grid columns={1} relaxed='very' stackable>\n                        {trans.transac_type === \"external\" && (<Grid.Column>\n                          <DropdownMenu\n                            size=\"sm\"\n                            variant=\"secondary\"\n                            title=\"Customer\"\n                            key={idx}\n                          >\n                            <h5>Customer</h5>\n                            {trans.transac_customer.name && <p key={trans.transac_customer.name} >Name: {trans.transac_customer.name}</p>}\n                            {trans.transac_customer.email && <p key={trans.transac_customer.email} >Email: {trans.transac_customer.email}</p>}\n                            {trans.transac_customer.phone && <p key={trans.transac_customer.phone} >Phone: {trans.transac_customer.phone}</p>}\n                          </DropdownMenu>\n                        </Grid.Column>)}\n                        <Grid.Column>\n                          <DropdownMenu\n                            size=\"sm\"\n                            variant=\"secondary\"\n                            title=\"Items\"\n                            key={idx}\n                          >\n                            <h5>Items</h5>\n                            <Card.Body>\n                              {trans.transac_items.map((item) => (\n                                <p as={'li'} key={item._id} >({item.item_quantity}) {item.item_name}</p>\n                              ))}\n                            </Card.Body>\n                          </DropdownMenu>\n                        </Grid.Column>\n                      </Grid></ListGroup.Item>\n                    </ListGroup>\n                    <Button variant=\"light\" onClick={() => {\n                      this.setState({ toggle: !toggle });\n                      this.props.history.push({\n                        pathname: '/invoice',\n                        state: { trans }\n                      })\n                    }}>Print invoice</Button>\n                  </Card>\n                  {trans && toggle && showInvoice(trans)}\n                </Col>\n              ))}\n            </Row>\n\n          </Container>)}\n        {!results.length && <Trans />}\n      </Grid>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  trans: state.trans.trans\n});\n\nexport default connect(\n  mapStateToProps\n)(withRouter(TransSearch));\n\n\nconst resultRenderer = ({ transac_items, transac_date, transac_operator, transac_total, transac_status }) => [\n  <div key='content' className='content'>\n    {transac_status && <div className='price'>Customer: {transac_status}</div>}\n    {transac_total && <div className='title'>Total: ${transac_total}</div>}\n    {transac_date && <div className='description'>Sale date: {moment(transac_date).format(\"LL\")}</div>}\n    {transac_items && transac_items.map(item => (\n      <p>({item.item_quantity}) {item.item_name}</p>\n    ))}\n    {transac_operator && <div className='title'>Assistant: {transac_operator}</div>}\n  </div>\n]\n\n\nconst cardStyle = {\n  display: 'flex',\n  margin: '.3rem',\n  width: \"20rem\",\n  minWidth: '300px',\n  maxWidth: '350px',\n  boxRadius: '0.5rem',\n  boxShadow: 'inset 0 1px 1px rgba(0,0,0, 0.075), 0 0 8px hsla(0, 0%, 76.9%, 0.4)'\n}\n\nconst showInvoice = (transac) => {\n  let { _id,\n    invoice_number,\n    transac_type,\n    transac_items,\n    transac_status,\n    transac_operator,\n    transac_vehicle,\n    sale_transac,\n    transac_subtotal,\n    transac_discount,\n    transac_taxes,\n    transac_total,\n    amount_received,\n    transac_message,\n    transac_date } = transac\n  return (\n\n    <div>\n      <Invoice\n        id={_id}\n        invoice_number={invoice_number}\n        transac_type={transac_type}\n        transac_items={transac_items}\n        transac_status={transac_status}\n        transac_operator={transac_operator}\n        transac_vehicle={transac_vehicle}\n        sale_transac={sale_transac}\n        transac_subtotal={transac_subtotal}\n        transac_discount={transac_discount}\n        transac_taxes={transac_taxes}\n        transac_total={transac_total}\n        amount_received={amount_received}\n        transac_message={transac_message}\n        transac_date={transac_date}\n      />\n    </div>)\n}","import React, { useEffect } from 'react'\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// Redux\nimport { useSelector, useDispatch } from \"react-redux\";\n// import store from \"./store\";\nimport { loadUser } from \"./actions/authActions\";\nimport { setCart, setCartVehicle } from \"./actions/cartItemsActions\";\n// CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'semantic-ui-css/semantic.min.css'\nimport \"./App.css\";\nimport \"./components/invoice/invoice.css\";\n\n// Components\nimport MyNavbar from \"./components/MyNavbar\";\nimport { Container } from \"reactstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport ItemsList from \"./components/items/ItemsList\";\nimport EditItem from './components/items/EditItem';\nimport EditVehicle from './components/vehicles/EditVehicle';\nimport { Cart } from './components/cartItems/Cart';\nimport ShowInvoice from './components/invoice/ShowInvoice';\nimport TransSearch from './components/dashboard/TransSearch';\nimport { getTrans } from './actions/transActions';\nimport { getVehicles } from './actions/vehicleActions';\nexport const App = () => {\n    const dispatch = useDispatch()\n    const auth = useSelector(state => state.auth)\n    const state = useSelector((state) => state);\n    let cart = state.cartItems.cart\n    useEffect(() => {\n        dispatch(loadUser())\n        dispatch(setCart())\n        dispatch(setCartVehicle())\n        dispatch(getTrans())\n        dispatch(getVehicles())\n    }, [])\n\n    if (!auth.isAuthenticated) {\n        return (<><Router>\n            <MyNavbar />\n            <div className=\"spinner\">\n                <Spinner animation=\"grow\" variant=\"info\" />\n            </div>\n        </Router>\n        </>)\n    }\n\n    if (auth.isLoading) {\n        return (<><Router>\n            <MyNavbar />\n            <div className=\"spinner\">\n                <Spinner animation=\"grow\" variant=\"info\" />\n            </div>\n        </Router>\n        </>)\n    }\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <MyNavbar />\n                <Container>\n                    <Switch>\n                        <Route path=\"/\" exact render={() => <ItemsList cart={cart} />} />\n                        <Route\n                            path=\"/vehicle/edit/:id\"\n                            exact\n                            render={(props) => <EditVehicle {...props} />}\n                        />\n                        <Route\n                            path=\"/item/edit/:id\"\n                            exact\n                            render={(props) => <EditItem {...props} />}\n                        />\n                        <Route\n                            path=\"/cart\"\n                            exact\n                            render={(props) => <Cart {...props} />}\n                        />\n                        <Route\n                            path=\"/dashboard\"\n                            exact\n                            render={(props) => <TransSearch {...props} />}\n                        />\n                        <Route\n                            path=\"/invoice\"\n                            exact\n                            render={(props) => <ShowInvoice {...props} />}\n                        />\n                    </Switch>\n                </Container>\n            </div>\n        </Router>\n    )\n}\n\nexport default App","import {\n    GET_ITEMS,\n    ADD_ITEM,\n    EDIT_ITEM,\n    DELETE_ITEM,\n    ITEMS_LOADING\n} from '../actions/types';\n\nconst initialState = {\n    items: [],\n    loading: false\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ITEMS:\n            return {\n                ...state,\n                items: action.payload,\n                loading: false\n            };\n        case DELETE_ITEM:\n            return {\n                ...state,\n                items: state.items.filter(item => item._id !== action.payload)\n            };\n        case ADD_ITEM:\n        case EDIT_ITEM:\n            return {\n                ...state,\n                items: [action.payload, ...state.items],\n                loading: false\n            };\n        case ITEMS_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    GET_VEHICLES,\n    ADD_VEHICLE,\n    EDIT_VEHICLE,\n    DELETE_VEHICLE,\n    VEHICLES_LOADING\n} from '../actions/types';\n\nconst initialState = {\n    vehicles: [],\n    loading: false\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_VEHICLES:\n            return {\n                ...state,\n                vehicles: action.payload,\n                loading: false\n            };\n        case DELETE_VEHICLE:\n            return {\n                ...state,\n                vehicles: state.vehicles.filter(veh => veh._id !== action.payload)\n            };\n        case ADD_VEHICLE:\n        case EDIT_VEHICLE:\n            return {\n                ...state,\n                vehicles: [action.payload, ...state.vehicles],\n                loading: false\n            };\n        case VEHICLES_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n}","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\n\nconst initialState = {\n  msg: null,\n  status: null,\n  id: null\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: null,\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  TOKEN\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(TOKEN),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(TOKEN, action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(TOKEN);\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_CART,\n  EMPTY_CART,\n  CART_LOADING,\n  UPDATE_CART_ITEM,\n  DELETE_CART_ITEM,\n  DELETE_CART_VEHICLE,\n  SET_CART_VEHICLE\n} from \"../actions/types\";\nimport Swal from \"sweetalert2\";\n\nconst initialState = {\n  cart: [],\n  vehicle: null,\n  loading: false\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CART_ITEM:\n      if (window.location.pathname !== \"/cart\") {\n        Swal.fire({\n          position: \"top-end\",\n          title: \"Success\",\n          text: \"Item added to cart!\",\n          showConfirmButton: false,\n          timer: 1200,\n          icon: \"success\",\n          footer: '<a href=\"/cart\">Go to cart</a>'\n        });\n      }\n      return {\n        ...state,\n        cart: action.payload,\n        loading: false\n      };\n    case SET_CART:\n      return {\n        ...state,\n        cart: action.payload,\n        loading: false\n      };\n\n    case SET_CART_VEHICLE:\n      return {\n        ...state,\n        vehicle: action.payload,\n        loading: false\n      };\n    case DELETE_CART_ITEM:\n      if (window.location.pathname === \"/cart\") {\n        Swal.fire({\n          title: \"Removed\",\n          text: \"Item removed!\",\n          showConfirmButton: false,\n          timer: 1000,\n          icon: \"info\",\n          footer: '<a href=\"/\">Go to Vehicles</a>'\n        });\n      }\n      return {\n        ...state,\n        cart: action.payload,\n        loading: false\n      };\n    case DELETE_CART_VEHICLE:\n      if (window.location.pathname === \"/cart\") {\n        Swal.fire({\n          title: \"Removed\",\n          text: \"Vehicle removed!\",\n          showConfirmButton: false,\n          timer: 1000,\n          icon: \"info\",\n          footer: '<a href=\"/\">Go to Vehicles</a>'\n        });\n      }\n      return {\n        ...state,\n        vehicle: null,\n        loading: false\n      };\n    case EMPTY_CART:\n      return {\n        ...state,\n        cart: [],\n        loading: false\n      };\n    case CART_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import {\n    GET_TRANS,\n    SET_TRANS_LOADING\n  } from \"../actions/types\";\n  \n  const initialState = {\n    trans: [],\n    loading: false\n  };\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case GET_TRANS:\n        return {\n          ...state,\n          trans: action.payload,\n          loading: false\n        };\n      case SET_TRANS_LOADING:\n        return {\n          ...state,\n          loading: true\n        };\n      default:\n        return state;\n    }\n  }\n  ","import {\n  SET_CHECKOUT_LOADING,\n  POST_TRANSACTION,\n  SET_INVOICE,\n  CLEAR_INVOICE\n} from \"../actions/types\";\n\n\nconst initialState = {\n  posted: false,\n  invoice: null,\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case POST_TRANSACTION:\n      return {\n        ...state,\n        posted: true,\n        invoice: action.payload,\n        loading: false\n      };\n\n    case SET_INVOICE:\n      return {\n        ...state,\n        invoice: action.payload,\n        loading: false\n      }\n    case CLEAR_INVOICE:\n      return {\n        ...state,\n        invoice: null,\n        loading: false\n      }\n    case SET_CHECKOUT_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport itemsReducer from \"./itemsReducer\";\nimport vehicleReducer from \"./vehicleReducer\";\nimport errorReducer from \"./errorReducer\";\nimport authReducer from \"./authReducer\";\nimport cartItemsReducer from \"./cartItemsReducer\";\nimport transReducer from \"./transReducer\";\nimport checkoutReducer from \"./checkoutReducer\";\nexport default combineReducers({\n  items: itemsReducer,\n  vehicles: vehicleReducer,\n  error: errorReducer,\n  auth: authReducer,\n  cartItems: cartItemsReducer,\n  trans: transReducer,\n  checkout: checkoutReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:5000';\n// axios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\n// axios.defaults.headers.post['Content-Type'] = 'application/json';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}